<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HELLO TRAVELER</title>
  
  <subtitle>Sometimes ever, sometimes never</subtitle>
  <link href="https://whrblog.online/atom.xml" rel="self"/>
  
  <link href="https://whrblog.online/"/>
  <updated>2022-02-15T15:24:53.000Z</updated>
  <id>https://whrblog.online/</id>
  
  <author>
    <name>Whr</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>旅行的意义是什么?</title>
    <link href="https://whrblog.online/2022/%E6%97%85%E8%A1%8C%E7%9A%84%E6%84%8F%E4%B9%89%E6%98%AF%E4%BB%80%E4%B9%88/"/>
    <id>https://whrblog.online/2022/%E6%97%85%E8%A1%8C%E7%9A%84%E6%84%8F%E4%B9%89%E6%98%AF%E4%BB%80%E4%B9%88/</id>
    <published>2022-02-15T15:23:33.000Z</published>
    <updated>2022-02-15T15:24:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>喜欢独自旅行，“在路上”已成为一种生活姿态。</p><p>经常被问到“旅行的意义是什么”，想想在人生不同阶段，答案也有所不同。<br>旅行，一开始是出于炫耀，当在每一个到过的地方贴上“到此一游”的标签后，也就有了不甘人后的底气，有了谈资，继而增添了履历，满足了虚荣心，这是一种眼睛的旅行。 &nbsp;</p><hr><span id="more"></span><p>后来是为了学习。“读万卷书，行万里路。”读书是一种纸上的旅行，旅行是一种路上的读书，谁都无法代替谁，当用开放心态去触摸未知世界时，生活会变得充实而灵动，这是一种头脑的旅行。<br>再后来发现，旅行就是旅行，自有独特价值。于行者而言，星辰与大海既是初心，也是终点；既在路上，也在当下；既是远方，也是家园；这是一种心灵的旅行。 </p><hr><blockquote><p>“旅人叩过每个陌生人的门/才找到自己的家/人只有在外面四处漂泊/才能到达内心最深的殿堂。” ——泰戈尔</p></blockquote><hr><p>一路走来，欣赏过那么多壮丽的景色，了解过那么多奇特的风情，接触过那么多陌生的脸孔，发生过那么多感人的故事，历经过那么多艰苦的磨练，不为炫耀，不为猎奇，更非走向虚无，而是更加认识自己。 路上是一个不断怀疑、否定、推翻、重建与求证的过程，一个忍受痛苦与挣扎的蜕变与重生的过程，一个不断告别过去、享受当下与寻找未来的过程。</p><p>如果风景与经历没有刻在心上，没有在远行中成长，那走得再远，也只是邮差。 “一个人的行走范围,就是他的世界。”当反思生活中的种种成败得失时，也许远行中曾经流连的一处风景、一个细节、一种心态就会涌上心头，让思考更宽广、更扎实，让人生选择时有丰富的可能性，而不会被眼前的世界所局限。</p><p>旅行的意义并不在于一个个具体的世俗目的，但事实上旅行的“名利”价值无处不在，而且是构建人生坐标的基石。 知乎上有个高赞的问答：“我读过很多书，但后来大部分都忘记了，你说这样的阅读究竟有什么意义？”“当我还是个孩子时，我吃过很多食物，现在已经记不起来吃过什么了。但可以肯定的是，它们中的一部分已经长成我的骨头和肉。”读书如此，旅行亦如此。<br>旅行是一场感动，一场旅心，一场修行。走出去是为了走回来，只有清楚世界的方位，才能找到自身的定位。<br>当跋涉过岁月与山河，挣扎过月亮与六便士，旅行成为身体和灵魂的一部分后，你会发现自己想要什么样的风景，什么样的生活，继而找到一条适合自己的路，找到自己最舒服的状态。那时，你已找到归途，找到自我，找到心安之家了；那时，你已懂得善待自己，成全自己，成为自己了。</p><hr>]]></content>
    
    
    <summary type="html">&lt;p&gt;喜欢独自旅行，“在路上”已成为一种生活姿态。&lt;/p&gt;
&lt;p&gt;经常被问到“旅行的意义是什么”，想想在人生不同阶段，答案也有所不同。&lt;br&gt;旅行，一开始是出于炫耀，当在每一个到过的地方贴上“到此一游”的标签后，也就有了不甘人后的底气，有了谈资，继而增添了履历，满足了虚荣心，这是一种眼睛的旅行。 &amp;nbsp;&lt;/p&gt;
&lt;hr&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>2021的尾声—My Lonely Moment</title>
    <link href="https://whrblog.online/2022/2021%E7%9A%84%E5%B0%BE%E5%A3%B0%E2%80%94My-Lonely-Moment/"/>
    <id>https://whrblog.online/2022/2021%E7%9A%84%E5%B0%BE%E5%A3%B0%E2%80%94My-Lonely-Moment/</id>
    <published>2022-01-31T14:12:31.000Z</published>
    <updated>2022-01-31T14:24:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>在 2021 的最后，独自一人<br>窗外弥漫的雾气<br>一瞬，又一瞬<br>“之后能做什么呢”<br>转身，<br>光芒涌现  </p><hr><span id="more"></span><div id="player"></div><script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script><script type="text/javascript">var player = new DogePlayer({    container: document.getElementById('player'),    userId: 1131,    vcode: '4d215f84a8d12d66',    autoPlay: false});</script>]]></content>
    
    
    <summary type="html">&lt;p&gt;在 2021 的最后，独自一人&lt;br&gt;窗外弥漫的雾气&lt;br&gt;一瞬，又一瞬&lt;br&gt;“之后能做什么呢”&lt;br&gt;转身，&lt;br&gt;光芒涌现  &lt;/p&gt;
&lt;hr&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>柯达克罗姆彩色反转片的冲洗（转）</title>
    <link href="https://whrblog.online/2021/%E6%9F%AF%E8%BE%BE%E5%85%8B%E7%BD%97%E5%A7%86%E5%BD%A9%E8%89%B2%E5%8F%8D%E8%BD%AC%E7%89%87%E7%9A%84%E5%86%B2%E6%B4%97%EF%BC%88%E8%BD%AC%EF%BC%89/"/>
    <id>https://whrblog.online/2021/%E6%9F%AF%E8%BE%BE%E5%85%8B%E7%BD%97%E5%A7%86%E5%BD%A9%E8%89%B2%E5%8F%8D%E8%BD%AC%E7%89%87%E7%9A%84%E5%86%B2%E6%B4%97%EF%BC%88%E8%BD%AC%EF%BC%89/</id>
    <published>2021-10-28T16:26:56.000Z</published>
    <updated>2022-02-15T15:25:12.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于柯达克罗姆彩色反转片的概况">          <a href="#关于柯达克罗姆彩色反转片的概况" class="heading-link"><i class="fas fa-link"></i></a><a href="#关于柯达克罗姆彩色反转片的概况" class="headerlink" title="关于柯达克罗姆彩色反转片的概况"></a>关于柯达克罗姆彩色反转片的概况</h1>      <p>柯达公司从1936年开始生产外式法柯达克罗姆色彩反转片，目前共生产三个品种，即：柯达克罗姆25、柯达克罗姆40和柯达克罗姆64。25型和64型是日光型，40型是灯光片。<br>柯达克罗姆彩色反转片的感光度都比较低，25型为ASA25,40型为ASA40，64型为ASA64。它们的共同特点是颗粒细、清晰度高和色彩还原好，主要供作为幻灯片使用。<br>柯达克罗姆胶片的冲洗工艺代号为K14，但原厂既不不公布配方，也不供应成药，只能寄回原厂或原厂指定的代理公司冲洗。</p><hr><span id="more"></span><hr>        <h1 id="柯达克罗姆彩色胶片的构造">          <a href="#柯达克罗姆彩色胶片的构造" class="heading-link"><i class="fas fa-link"></i></a><a href="#柯达克罗姆彩色胶片的构造" class="headerlink" title="柯达克罗姆彩色胶片的构造"></a>柯达克罗姆彩色胶片的构造</h1>      <p>柯达克罗姆彩色胶片的构造与一般多层彩色胶片没有根本的区别，其基本结构如下</p>        <h2 id="结构">          <a href="#结构" class="heading-link"><i class="fas fa-link"></i></a><a href="#结构" class="headerlink" title="结构"></a>结构</h2>      <div class="table-container"><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>1</td><td>感蓝光乳剂层</td></tr><tr><td>2</td><td>黄滤色层</td></tr><tr><td>3</td><td>感绿光乳剂层</td></tr><tr><td>4</td><td>感红光乳剂层</td></tr><tr><td>5</td><td>片基</td></tr><tr><td>6</td><td>防光晕层</td></tr></tbody></table></div><p>柯达克罗姆胶片也是在醋酸纤维片基上依次涂布着感蓝光乳剂层、黄滤色层、感绿光乳剂层和感红光乳剂层，片基的背面涂有碳黑的防光晕层。但是它在蓝、绿、红三层乳剂中含有丙烯酸乙酯和丙烯酸的共聚体，这样一方面可以取消明胶间的隔层，另一方面可以提高在显影过程中外式法彩色显影的上色率，同时也可以防止颜色穿层的现象。  </p>        <h1 id="外式法色彩显影的工艺过程：">          <a href="#外式法色彩显影的工艺过程：" class="heading-link"><i class="fas fa-link"></i></a><a href="#外式法色彩显影的工艺过程：" class="headerlink" title="外式法色彩显影的工艺过程："></a>外式法色彩显影的工艺过程：</h1>      <p>柯达克罗姆胶片，实际上是一种黑白分色多层乳剂的感光材料，在乳剂中并不含有成色剂。<br>经过拍摄曝光在红、绿、蓝三个感光层产生潜影，在冲洗的时候，首先和一般反转片一样，要进行首次黑白显影，把三层感光层的潜影全部还原为金属银的负像。<br>然后把各层残留着的未曝光的卤化银再进行分层曝光和分层彩色显影，这就和一般的反转片不同了。</p><ol><li>先把胶片背面（即片基面）对着红光进行反转曝光，接着进行青色彩显，使感红层获得青色正像</li><li>再把胶片的乳剂面（即上层）对着蓝光进行反转曝光，接着进行黄色彩显，使感蓝层得到黄色正像</li><li>然后对中间感绿层用绿光进行反转曝光</li><li>接着进行品红色彩显</li><li>最后再经漂白、定影、水洗等过程<br>即获得与被摄景物颜色相同的彩色正像。<br>在进行外式法彩色显影时，可以根据成色剂的特性来调整显影液的配方，有时也可以更换彩色显影剂，用于调整色彩还原和提高胶片的上色率。</li></ol>        <h1 id="外式法彩色显影的成色剂：">          <a href="#外式法彩色显影的成色剂：" class="heading-link"><i class="fas fa-link"></i></a><a href="#外式法彩色显影的成色剂：" class="headerlink" title="外式法彩色显影的成色剂："></a>外式法彩色显影的成色剂：</h1>      <p>冲洗加工柯达克罗姆，由于胶片乳剂不含有成色剂，必须用外式法进行彩色显影，因此对成色剂的选择特别重要，它直接影响彩色还原质量和色彩平衡。通过试验我们进一步体会到，对黄、品红、青三种成色剂的要求是十分严格的，有以下一些特点：</p><ol><li>彩色画面上所生成黄、品红、青三种染料的光谱特性应与胶片所具有的蓝、绿、红乳剂的感光特性相适应。  </li><li>在彩色显影过程中，成色剂的上色率要高，但彩色灰雾要较低。   </li><li>在彩色显影过程中，彩色影像应与银影像相符合，不能产生染料的扩散与渗透现象。  </li><li>在冲洗加工过程中，应能经过得住酸、碱、醛等溶液的处理，而不致变色或褪色。  </li><li>成色剂应能溶解于有机溶剂和氢氧化钠溶液中，也能溶解于彩色显影液中而不会产生沉淀。  </li></ol>        <h1 id="冲洗工艺过程">          <a href="#冲洗工艺过程" class="heading-link"><i class="fas fa-link"></i></a><a href="#冲洗工艺过程" class="headerlink" title="冲洗工艺过程"></a>冲洗工艺过程</h1>      <div class="table-container"><table><thead><tr><th></th><th>工序</th><th>温度（℃）</th><th>时间（min）</th></tr></thead><tbody><tr><td>1</td><td>预坚膜</td><td>24</td><td>3</td></tr><tr><td>2</td><td>水洗</td><td>20～24</td><td>0.5</td></tr><tr><td>3</td><td>首显</td><td>24</td><td>4</td></tr><tr><td>4</td><td>停显</td><td>22～24</td><td>3</td></tr><tr><td>5</td><td>水洗</td><td>20～24</td><td>10</td></tr><tr><td>6</td><td>红光曝光</td><td></td><td></td></tr><tr><td>7</td><td>青显影</td><td>24</td><td>10</td></tr><tr><td>8</td><td>黑白显影</td><td>22～24</td><td>2</td></tr><tr><td>9</td><td>停显</td><td>22～24</td><td>2</td></tr><tr><td>10</td><td>水洗</td><td>20～24</td><td>10</td></tr><tr><td>11</td><td>蓝光曝光</td><td></td><td></td></tr><tr><td>12</td><td>黄显影</td><td>24</td><td>14</td></tr><tr><td>13</td><td>黑白显影</td><td>22～24</td><td>2</td></tr><tr><td>14</td><td>停影</td><td>22～24</td><td>2</td></tr><tr><td>15</td><td>水洗</td><td>20～24</td><td>10</td></tr><tr><td>16</td><td>绿光曝光</td><td></td><td></td></tr><tr><td>17</td><td>品红显影</td><td>24</td><td>10</td></tr><tr><td>18</td><td>停影</td><td>22～24</td><td>2</td></tr><tr><td>19</td><td>水洗</td><td>20～24</td><td>10</td></tr><tr><td>20</td><td>漂白</td><td>22～24</td><td>5</td></tr><tr><td>21</td><td>水洗</td><td>20～24</td><td>10</td></tr><tr><td>22</td><td>定影</td><td>22～24</td><td>5</td></tr><tr><td>23</td><td>水洗</td><td>20～24</td><td>10</td></tr><tr><td>24</td><td>稳定</td><td>22～24</td><td>1</td></tr><tr><td>25</td><td>干燥</td><td></td><td></td></tr></tbody></table></div>        <h2 id="〖注〗">          <a href="#〖注〗" class="heading-link"><i class="fas fa-link"></i></a><a href="#〖注〗" class="headerlink" title="〖注〗"></a>〖注〗</h2>              <h3 id="红曝光：">          <a href="#红曝光：" class="heading-link"><i class="fas fa-link"></i></a><a href="#红曝光：" class="headerlink" title="红曝光："></a>红曝光：</h3>      <p>必须选用与胶片感色性相对应的红滤色镜（或滤色片）对红感光层进行反转曝光，红感光层是涂布在底层，即片基之上，所以，红曝光时，须将胶片片基面对着红光源。<br>我们使用的红滤镜是<code>柯达雷登70号</code>，将红色滤色镜装在彩色放大机的滤色镜夹具中，插入光源前，把放大机镜头光圈全部打开，将红光投影在黑纸上以防反光，然后将柯达克罗姆胶片平放在投影台上，放大机镜头距胶片0.5米，打开光源后对胶片进行分段曝光，<code>每段曝光5分钟</code>，这些都是在暗室中进行。<br>对于滤色镜的选择是十分重要的，这主要取决于他的波长和光谱透光特性，如果要改换滤色镜，需通过试验效果后确定。</p>        <h3 id="青彩色显影：">          <a href="#青彩色显影：" class="heading-link"><i class="fas fa-link"></i></a><a href="#青彩色显影：" class="headerlink" title="青彩色显影："></a>青彩色显影：</h3>      <p>胶片红曝光后，装入显影罐中，然后将青成色剂溶解加入显影液中，调好温度，胶片进行青彩显，在<code>温度24摄氏度下显影10分钟</code>。<br>为了全部地还原底层乳剂中的卤化银，在青色显影之后，须再用黑白显影液进行补充显影。<br>同时为了控制、调整青色画面密度，还可以根据情况在青彩显液中加入适当的黑白显影剂，如米吐尔溶液，一般我们在1000毫升青显影液内加入1%的米吐尔溶液5-10毫升，这对青色密度的影响效果显著。  </p>        <h4 id="对青显影的要求是：">          <a href="#对青显影的要求是：" class="heading-link"><i class="fas fa-link"></i></a><a href="#对青显影的要求是：" class="headerlink" title="对青显影的要求是："></a>对青显影的要求是：</h4>      <p>应控制青色密度、灰雾和反差，因为青色显影效果，它也会影响后面黄显影与品红显影密度的上色率，如果青色灰雾大，会造成色彩不平衡。<br><code>对于青显影液最好是配好就用，用多少配多少，用后即倒掉，以保证药液稳定。</code></p>        <h3 id="黑白显影：">          <a href="#黑白显影：" class="heading-link"><i class="fas fa-link"></i></a><a href="#黑白显影：" class="headerlink" title="黑白显影："></a>黑白显影：</h3>      <p>这次黑白显影的作用主要是为了全部地还原底层乳剂中青显影后剩余的卤化银进行补充显影。</p>        <h3 id="蓝曝光：">          <a href="#蓝曝光：" class="heading-link"><i class="fas fa-link"></i></a><a href="#蓝曝光：" class="headerlink" title="蓝曝光："></a>蓝曝光：</h3>      <p>柯达克罗姆胶片的蓝感光层是在胶片的上层，因此要把胶片乳剂面对着蓝光进行反转曝光，要注意蓝滤色镜的选择，对于它的波长和光谱透光特性应十分严格，以防止穿层现象。<br>我们使用的滤色镜是<code>柯达雷登47B</code>。蓝曝光操作方法和红曝光一样，只是胶片乳剂面向上，对准蓝光源，也是采用分段曝光，在暗室中进行。</p>        <h3 id="黄彩色显影：">          <a href="#黄彩色显影：" class="heading-link"><i class="fas fa-link"></i></a><a href="#黄彩色显影：" class="headerlink" title="黄彩色显影："></a>黄彩色显影：</h3>      <p>胶片蓝曝光后，装入显影罐中，然后将黄色成色剂按照配制黄显影液要求溶解后加入显影液中，调好温度后，胶片进入黄彩色显影，在<code>温度24摄氏度</code>下，<code>显影14分钟</code>。  </p>        <h4 id="对黄显影的要求是：">          <a href="#对黄显影的要求是：" class="heading-link"><i class="fas fa-link"></i></a><a href="#对黄显影的要求是：" class="headerlink" title="对黄显影的要求是："></a>对黄显影的要求是：</h4>      <p>黄上色率要高，灰雾要小。选用的黄色成色剂经显影后，画面里的黄色中不能有带有红色，黄色透明度要好。<br><code>黄显影液也是随配好随用，用多少配多少，使用后即倒掉，以保证冲洗质量。</code></p>        <h3 id="黑白显影：-1">          <a href="#黑白显影：-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#黑白显影：-1" class="headerlink" title="黑白显影："></a>黑白显影：</h3>      <p>黄显影后，随即进行黑白补充显影，使黄乳剂层中已曝光而未显影的残余卤化银全部还原成金属银，以防止在品红灰雾显影时影响品红的上色率和增加灰雾。</p>        <h3 id="品红灰雾显影：">          <a href="#品红灰雾显影：" class="heading-link"><i class="fas fa-link"></i></a><a href="#品红灰雾显影：" class="headerlink" title="品红灰雾显影："></a>品红灰雾显影：</h3>      <p>显影液中加入品红成色剂后再加入适当的灰雾剂，使乳剂中的银盐全部灰化，进行显影还原。<br>同时为了控制品红画面密度，也可以根据情况在品红彩色显影液中加入适当的黑白显影液，如米吐尔溶液，一般我们在1000毫升品红显影液内加入1%的米吐尔溶液3-5毫升，即可控制品红密度。</p>        <h1 id="配方">          <a href="#配方" class="heading-link"><i class="fas fa-link"></i></a><a href="#配方" class="headerlink" title="配方"></a>配方</h1>              <h2 id="预坚液-PH值9">          <a href="#预坚液-PH值9" class="heading-link"><i class="fas fa-link"></i></a><a href="#预坚液-PH值9" class="headerlink" title="预坚液&nbsp;PH值9"></a>预坚液&nbsp;PH值9</h2>      <div class="table-container"><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>水</td><td>800毫升</td></tr><tr><td>亚硫酸氢钠</td><td>1克</td></tr><tr><td>四硼酸钠</td><td>20克</td></tr><tr><td>甲醛</td><td>20毫升</td></tr><tr><td>无水硫酸钠</td><td>100克</td></tr><tr><td>溴化钾</td><td>1克</td></tr><tr><td>加水至1000毫升</td><td></td></tr></tbody></table></div>        <h2 id="首显液-PH值10-5">          <a href="#首显液-PH值10-5" class="heading-link"><i class="fas fa-link"></i></a><a href="#首显液-PH值10-5" class="headerlink" title="首显液&nbsp;PH值10.5"></a>首显液&nbsp;PH值10.5</h2>      <div class="table-container"><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>水</td><td>800毫升</td></tr><tr><td>米吐尔</td><td>4克</td></tr><tr><td>无水亚硫酸钠</td><td>50克</td></tr><tr><td>海得尔（对苯二酚）</td><td>4克</td></tr><tr><td>无水碳酸钠</td><td>30克</td></tr><tr><td>氢氧化钠</td><td>1克</td></tr><tr><td>硫氰酸钾</td><td>1克</td></tr><tr><td>溴化钾</td><td>3克</td></tr><tr><td>六硝基苯并咪唑1%</td><td>5毫升</td></tr><tr><td>加水至1000毫升</td><td></td></tr></tbody></table></div>        <h2 id="停显液">          <a href="#停显液" class="heading-link"><i class="fas fa-link"></i></a><a href="#停显液" class="headerlink" title="停显液"></a>停显液</h2>      <div class="table-container"><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>水</td><td>800毫升</td></tr><tr><td>98%醋酸</td><td>20毫升</td></tr><tr><td>加水至1000毫升</td><td></td></tr></tbody></table></div>        <h2 id="青彩色显影液-PH值11-3">          <a href="#青彩色显影液-PH值11-3" class="heading-link"><i class="fas fa-link"></i></a><a href="#青彩色显影液-PH值11-3" class="headerlink" title="青彩色显影液 PH值11.3"></a>青彩色显影液 PH值11.3</h2>      <div class="table-container"><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>水</td><td>600毫升</td></tr><tr><td>无水亚硫酸钠</td><td>10克</td></tr><tr><td>磷酸钠</td><td>25克</td></tr><tr><td>盐酸羟胺</td><td>1克</td></tr><tr><td>溴化钾</td><td>1克</td></tr><tr><td>六硝基苯并咪唑1%</td><td>10毫升</td></tr><tr><td>CD-2</td><td>2克</td></tr><tr><td>加水至800毫升</td><td></td></tr></tbody></table></div>        <h3 id="〖注〗-1">          <a href="#〖注〗-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#〖注〗-1" class="headerlink" title="〖注〗"></a>〖注〗</h3>      <p>在使用前取青成色剂1克，溶解于10%含有氢氧化钠溶液的20毫升中，成色剂完全溶解后加入上述显影液中，然后将显影液加水至1000毫升，胶片经红曝光后，即可进行青显影。<br>其中CD-2化学成分名称为：2-氨基-5-二乙基氨基甲苯盐酸盐。</p>        <h2 id="黄彩色显影液-PH值11-5">          <a href="#黄彩色显影液-PH值11-5" class="heading-link"><i class="fas fa-link"></i></a><a href="#黄彩色显影液-PH值11-5" class="headerlink" title="黄彩色显影液 PH值11.5"></a>黄彩色显影液 PH值11.5</h2>      <div class="table-container"><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>水</td><td>600毫升</td></tr><tr><td>无水亚硫酸钠</td><td>5克</td></tr><tr><td>磷酸钠</td><td>25克</td></tr><tr><td>氢氧化钠</td><td>2克</td></tr><tr><td>溴化钾</td><td>2克</td></tr><tr><td>盐酸羟胺</td><td>0.5克</td></tr><tr><td>六硝基苯并咪唑1%</td><td>10毫升</td></tr><tr><td>TSS</td><td>2.8克</td></tr><tr><td>加水至800毫升</td><td></td></tr></tbody></table></div>        <h3 id="〖注〗-2">          <a href="#〖注〗-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#〖注〗-2" class="headerlink" title="〖注〗"></a>〖注〗</h3>      <p>在使用前取黄色成色剂1.2克，用20毫升丙酮溶液溶解黄成色剂，完全溶解后再加入上述显影液中，然后将显影液加水至1000毫升。<br>胶片经蓝曝光后，即可进行黄显影。<br>其中TSS化学成分名称为：对氨基二乙基苯胺硫酸盐。</p>        <h2 id="黑白显影液：">          <a href="#黑白显影液：" class="heading-link"><i class="fas fa-link"></i></a><a href="#黑白显影液：" class="headerlink" title="黑白显影液："></a>黑白显影液：</h2>      <div class="table-container"><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>水</td><td>700毫升</td></tr><tr><td>米吐尔</td><td>3克</td></tr><tr><td>无水亚硫酸钠</td><td>45克</td></tr><tr><td>海得尔（对苯二酚）</td><td>12克</td></tr><tr><td>无水碳酸钠</td><td>60克</td></tr><tr><td>溴化钾</td><td>2克</td></tr><tr><td>加水至1000毫升</td><td></td></tr></tbody></table></div>        <h3 id="〖注〗-3">          <a href="#〖注〗-3" class="heading-link"><i class="fas fa-link"></i></a><a href="#〖注〗-3" class="headerlink" title="〖注〗"></a>〖注〗</h3>      <p>使用时一份药液加一份水冲淡后显影，即1：1。</p>        <h2 id="品红彩色显影液-PH值11-75">          <a href="#品红彩色显影液-PH值11-75" class="heading-link"><i class="fas fa-link"></i></a><a href="#品红彩色显影液-PH值11-75" class="headerlink" title="品红彩色显影液 PH值11.75"></a>品红彩色显影液 PH值11.75</h2>      <div class="table-container"><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>水</td><td>800毫升</td></tr><tr><td>无水亚硫酸钠</td><td>4克</td></tr><tr><td>TSS</td><td>4克</td></tr><tr><td>氢氧化钠</td><td>1克</td></tr><tr><td>一水合氨</td><td>8毫升</td></tr><tr><td>对硝基苯乙腈</td><td>1克</td></tr><tr><td>加水至1000毫升</td><td></td></tr></tbody></table></div>        <h3 id="〖注〗-4">          <a href="#〖注〗-4" class="heading-link"><i class="fas fa-link"></i></a><a href="#〖注〗-4" class="headerlink" title="〖注〗"></a>〖注〗</h3>      <p>品红彩显液配方法：<br>配方中除成色剂及灰雾剂（氢氧化胺），其他药品可先溶解配成储备液。在使用前将对硝基苯乙腈（品红成色剂）1克放入20毫升丙酮溶液和10毫升乙醇溶解中溶解，然后再加上上述显影液中，将水加至1000毫升，待其它准备工作完成后（如调好显影液温度等），胶片进入品红显影前再加入氢氧化胺8毫升（灰雾剂），此时，立即将胶片进行品红显影。<br>其中TSS化学成分名称为：对氨基二乙基苯胺硫酸盐。</p>        <h2 id="漂白液-PH值6-9">          <a href="#漂白液-PH值6-9" class="heading-link"><i class="fas fa-link"></i></a><a href="#漂白液-PH值6-9" class="headerlink" title="漂白液 PH值6.9"></a>漂白液 PH值6.9</h2>      <div class="table-container"><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>水</td><td>800毫升</td></tr><tr><td>铁氰化钾</td><td>50克</td></tr><tr><td>溴化钾</td><td>10克</td></tr><tr><td>加水至1000毫升</td><td></td></tr></tbody></table></div>        <h2 id="定影液-PH值8-5">          <a href="#定影液-PH值8-5" class="heading-link"><i class="fas fa-link"></i></a><a href="#定影液-PH值8-5" class="headerlink" title="定影液 PH值8.5"></a>定影液 PH值8.5</h2>      <div class="table-container"><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>水</td><td>700毫升</td></tr><tr><td>海波</td><td>200克</td></tr><tr><td>无水亚硫酸钠</td><td>10克</td></tr><tr><td>加水至1000毫升</td><td></td></tr></tbody></table></div>        <h2 id="稳定液">          <a href="#稳定液" class="heading-link"><i class="fas fa-link"></i></a><a href="#稳定液" class="headerlink" title="稳定液"></a>稳定液</h2>      <div class="table-container"><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>水</td><td>800毫升</td></tr><tr><td>皂角素（湿润剂）</td><td>1克</td></tr><tr><td>甲醛</td><td>10毫升</td></tr><tr><td>加水至1000毫升</td><td></td></tr></tbody></table></div>        <h1 id="样片">          <a href="#样片" class="heading-link"><i class="fas fa-link"></i></a><a href="#样片" class="headerlink" title="样片"></a>样片</h1>      <p><span class="exturl"><a class="exturl__link" href="https://www.flickr.com/people/54110121@N02/#">Kelly-Shane Fuller</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br><span class="exturl"><a class="exturl__link" href="https://www.flickr.com/photos/doctorspider/">Paweł Pająk</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;关于柯达克罗姆彩色反转片的概况&quot;&gt;
          &lt;a href=&quot;#关于柯达克罗姆彩色反转片的概况&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#关于柯达克罗姆彩色反转片的概况&quot; class=&quot;headerlink&quot; title=&quot;关于柯达克罗姆彩色反转片的概况&quot;&gt;&lt;/a&gt;关于柯达克罗姆彩色反转片的概况&lt;/h1&gt;
      &lt;p&gt;柯达公司从1936年开始生产外式法柯达克罗姆色彩反转片，目前共生产三个品种，即：柯达克罗姆25、柯达克罗姆40和柯达克罗姆64。25型和64型是日光型，40型是灯光片。&lt;br&gt;柯达克罗姆彩色反转片的感光度都比较低，25型为ASA25,40型为ASA40，64型为ASA64。它们的共同特点是颗粒细、清晰度高和色彩还原好，主要供作为幻灯片使用。&lt;br&gt;柯达克罗姆胶片的冲洗工艺代号为K14，但原厂既不不公布配方，也不供应成药，只能寄回原厂或原厂指定的代理公司冲洗。&lt;/p&gt;
&lt;hr&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>提升Intel 4代处理器性能锁定全核倍频</title>
    <link href="https://whrblog.online/2021/enhance_haswell/"/>
    <id>https://whrblog.online/2021/enhance_haswell/</id>
    <published>2021-09-20T12:59:14.000Z</published>
    <updated>2022-01-24T06:26:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>Z系列可以直接解锁全核倍频。对于B和H系列，如果你的主板BIOS选项中有 （CPU倍频 all core），也可以解锁全核倍频</p><span id="more"></span><hr>        <h1 id="工具">          <a href="#工具" class="heading-link"><i class="fas fa-link"></i></a><a href="#工具" class="headerlink" title="工具"></a>工具</h1>      <ol><li>主板BIOS（2015年3月左右或者官方超频BIOS)</li><li><span class="exturl"><a class="exturl__link" href="https://github.com/wanghurui/whrblog/releases/tag/Blog">UEFI Tool</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li></ol>        <h1 id="替换BIOS中的微码">          <a href="#替换BIOS中的微码" class="heading-link"><i class="fas fa-link"></i></a><a href="#替换BIOS中的微码" class="headerlink" title="替换BIOS中的微码"></a>替换BIOS中的微码</h1>      <p>运行<code>UEFI.BIOS.Updater.1.66 </code>文件夹中的<code>ubu.bat</code>。<code>ubu.bat</code>可以自己识别文件夹中的BIOS文件，如果没有自动识别，提示载入一个文件，选择bios文件即可。</p>        <h2 id="更新CPU微码">          <a href="#更新CPU微码" class="heading-link"><i class="fas fa-link"></i></a><a href="#更新CPU微码" class="headerlink" title="更新CPU微码"></a>更新CPU微码</h2>      <p>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://i.loli.net/2021/09/20/oMhPRSwUak18Ocn.png" alt="image.png">      </p>        <h2 id="更新HasWell架构微码">          <a href="#更新HasWell架构微码" class="heading-link"><i class="fas fa-link"></i></a><a href="#更新HasWell架构微码" class="headerlink" title="更新HasWell架构微码"></a>更新HasWell架构微码</h2>      <p>输入7回车，更新CPU微码</p><p>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://i.loli.net/2021/09/20/nb7tU8vcVZ5G61M.png" alt="image.png">      <br>输入1回车，更新HasWell架构微码<br>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://i.loli.net/2021/09/20/bgHBlJXjqrQn5o2.png" alt="image.png">        </p>        <h2 id="解锁HasWell限制">          <a href="#解锁HasWell限制" class="heading-link"><i class="fas fa-link"></i></a><a href="#解锁HasWell限制" class="headerlink" title="解锁HasWell限制"></a>解锁HasWell限制</h2>      <p>输入7回车，解锁HasWell限制<br>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://i.loli.net/2021/09/20/d34Ho7UmFQchx8G.png" alt="image.png">      <br>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://i.loli.net/2021/09/20/31oLk86umDrlOwW.png" alt="image.png">          </p><p>输入0回车，完成BIOS编辑<br>输入1回车，将新BIOS保存到当前目录<br>输入任意键结束程序，程序目录下便有最新的BIOS了</p>        <h1 id="刷写BIOS">          <a href="#刷写BIOS" class="heading-link"><i class="fas fa-link"></i></a><a href="#刷写BIOS" class="headerlink" title="刷写BIOS"></a>刷写BIOS</h1>      <p>把它放入_FAT32_格式U盘根目录中<br>详细刷写BIOS请参考主板官网的帮助</p>        <h1 id="设置BIOS为all-core">          <a href="#设置BIOS为all-core" class="heading-link"><i class="fas fa-link"></i></a><a href="#设置BIOS为all-core" class="headerlink" title="设置BIOS为all core"></a>设置BIOS为all core</h1>      <p>cpu倍频必须必须选择所有内核（all core），否则解锁无效。在All core 填入你的CPU单核最大频率即可。如E3 1231V3 单核最大倍频为38  </p><p>保存退出重启电脑即可</p><hr><p>如果你打开电脑，打开CPUZ发现所有核心都运行在了最高倍频，那么恭喜，你锁住了。🎉</p><p>如果没有，请继续往下看。</p>        <h1 id="Oops！我没锁住🤔">          <a href="#Oops！我没锁住🤔" class="heading-link"><i class="fas fa-link"></i></a><a href="#Oops！我没锁住🤔" class="headerlink" title="Oops！我没锁住🤔"></a>Oops！我没锁住🤔</h1>      <blockquote><p>Make a screenshot of&nbsp;<code>regedit</code>&nbsp;with expanded key&nbsp;<code>HKEY_LOCAL_MACHINE\HARDWARE\DESCRIPTION\System\CentralProcessor\0</code>  </p></blockquote><blockquote><p>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://i.loli.net/2021/07/20/Mo9ZYUlrVO5cPWI.png" alt="image.png">      </p></blockquote><blockquote><p>Your BIOS has microcode with <code>0x06</code> version, but Windows update it to <code>0x28</code> version.<br>Delete or rename file <code>C:\Windows\System32\mcupdate_GenuineIntel.dll</code></p></blockquote><p><span class="exturl"><a class="exturl__link" href="https://www.bios-mods.com/forum/Thread-Biostar-B85W-CPU-frequency-problem">https://www.bios-mods.com/forum/Thread-Biostar-B85W-CPU-frequency-problem</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>大意就是我修改了BIOS中的微码为<code>0x06</code>，但是系统把微码更新成了<code>0x28</code>。  </p>        <h3 id="删除系统微码">          <a href="#删除系统微码" class="heading-link"><i class="fas fa-link"></i></a><a href="#删除系统微码" class="headerlink" title="删除系统微码"></a>删除系统微码</h3>      <p>在PE中删除或重命名系统微码文件<code>C:\Windows\System32\mcupdate_GenuineIntel.dll</code></p><p>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://i.loli.net/2021/07/20/3BbGqs95YDdMVIj.png" alt="image.png">      <br>还是锁不住🤔</p>        <h3 id="使用ThottleStop锁倍频">          <a href="#使用ThottleStop锁倍频" class="heading-link"><i class="fas fa-link"></i></a><a href="#使用ThottleStop锁倍频" class="headerlink" title="使用ThottleStop锁倍频"></a>使用ThottleStop锁倍频</h3>      <blockquote><p>Show FIVR and TPL information in ThrottleStop.</p></blockquote><p>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://i.loli.net/2021/07/21/mzlWRBYjx3sKS9F.png" alt="image.png">      <br>设置ThottleStop中的FIVR的Turbo Ratio Limits为CPU单核最大倍频。修改即时生效。</p><p>最后把ThottleStop设置为开机启动就行了</p><hr><p>🎉如果你锁住了，可以送我一条评论吗🎉</p><hr><p>参考资料</p><ul><li><span class="exturl"><a class="exturl__link" href="https://www.bios-mods.com/forum/Thread-Biostar-B85W-CPU-frequency-problem">https://www.bios-mods.com/forum/Thread-Biostar-B85W-CPU-frequency-problem</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><span class="exturl"><a class="exturl__link" href="https://zhuanlan.zhihu.com/p/54535319">https://zhuanlan.zhihu.com/p/54535319</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><span class="exturl"><a class="exturl__link" href="https://www.techpowerup.com/forums/threads/how-can-i-get-throttlestop-to-auto-load-when-windows-starts-up.230371/">https://www.techpowerup.com/forums/threads/how-can-i-get-throttlestop-to-auto-load-when-windows-starts-up.230371/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;Z系列可以直接解锁全核倍频。对于B和H系列，如果你的主板BIOS选项中有 （CPU倍频 all core），也可以解锁全核倍频&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>解读MTF曲线</title>
    <link href="https://whrblog.online/2021/%E8%A7%A3%E8%AF%BBmtf%E6%9B%B2%E7%BA%BF/"/>
    <id>https://whrblog.online/2021/%E8%A7%A3%E8%AF%BBmtf%E6%9B%B2%E7%BA%BF/</id>
    <published>2021-07-01T00:41:15.000Z</published>
    <updated>2021-08-21T02:42:53.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Modulation Transfer Function（调制传递函数）是分析镜头的解像比较科学的方法，这种测定光学频率的方式是以一个mm的范围内能呈现出多少条线来度量，其单位以line/mm来表示。所以当一支镜头能做到所入即所出的程度那就表示这支镜头是所谓的完美镜头，但是因为镜片镜头的设计往往还有很多因素影响所以不可能有这种理想化的镜头。</p></blockquote><span id="more"></span><hr><p>1.横坐标轴代表与画面中心的距离，从左到右代表从中心到边缘的成像 （全画幅镜头的横轴约22mm，残幅镜头的横轴约13mm） 2.纵坐标轴代表MTF值 3.黑色线条表示最大光圈，蓝色线条表示f/8光圈 4.粗线表示10线/mm，细线表示30线/mm 5.实线表示拍摄从中心呈放射状纹样的成像性能，用字母“S”表示 6.虚线表示拍摄线条呈同心圆向外扩展状纹样的成像性能，用字母“M”表示 &nbsp; [caption id=”” align=”aligncenter” width=”670”]<a href="https://z3.ax1x.com/2021/07/01/RD2Yo4.png">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://z3.ax1x.com/2021/07/01/RD2Yo4.png">      </a> <span class="exturl"><a class="exturl__link" href="https://www.canon.com.cn/product/ef/index/lensmtf.html/[/caption/]">https://www.canon.com.cn/product/ef/index/lensmtf.html\[/caption\]</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><hr><p>1. MTF值越接近1越好，即MTF线越高越好 2.粗线约高，说明镜头的反差表现越好 3.细线越高，说明镜头的分辨率越好 4. MTF曲线越平坦，说明边缘和中心的成像差距越小 5.实线和虚线越接近，说明镜头的焦外成像越好 6.蓝线说明镜头f/8时的成像水平，近似于镜头的最佳成像水平 7.黑线说明镜头最大光圈时的成像水平，大光圈的价值所在</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Modulation Transfer Function（调制传递函数）是分析镜头的解像比较科学的方法，这种测定光学频率的方式是以一个mm的范围内能呈现出多少条线来度量，其单位以line/mm来表示。所以当一支镜头能做到所入即所出的程度那就表示这支镜头是所谓的完美镜头，但是因为镜片镜头的设计往往还有很多因素影响所以不可能有这种理想化的镜头。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="uncategorized" scheme="https://whrblog.online/categories/uncategorized/"/>
    
    
    <category term="摄影" scheme="https://whrblog.online/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>Digispark模拟HID键盘控制BIOS</title>
    <link href="https://whrblog.online/2021/%E9%80%9A%E8%BF%87digispark%E6%A8%A1%E6%8B%9F%E9%94%AE%E7%9B%98%E6%8E%A7%E5%88%B6bios/"/>
    <id>https://whrblog.online/2021/%E9%80%9A%E8%BF%87digispark%E6%A8%A1%E6%8B%9F%E9%94%AE%E7%9B%98%E6%8E%A7%E5%88%B6bios/</id>
    <published>2021-04-05T13:50:08.000Z</published>
    <updated>2022-02-15T15:25:28.000Z</updated>
    
    <content type="html"><![CDATA[<details markdown="1"><summary>展开/收起</summary>有一个穷鬼，十分喜欢折腾电脑硬件，可他的父母并不支持他的兴趣爱好，他们认为生为学生就应该心无杂念的一心想着读书。几年过去了，穷鬼的电脑开始渐渐的赶不上时代了，他看了看他的CPU，不由自主地叹了口气：“Pentium E5300…<p>“ 在他的不懈努力之下，从<a href="krunk.cn">K</a>那里抢来了一块Q6600和一块9600GT 又过了几年，又从一个不知名的仓库里拆出了一块Q9300。<br>  没过多久，他收到一个快递，拆开一看竟然是印着自己名字的GT1030，那天，是他的生日。 一年后，穷鬼上了高中，发现处理器还是差那么亿点点，他看了看自己空空荡荡的钱包，一咬牙，买了一块X5450，装CPU的那天，他心里想着，装上了这块CPU你就无敌了…… 欧耶，点亮了！ 关机。 来BIOS里超个外频。欸，🌿🌿🌿，怎么点不亮了，#￥%……他发现了一个问题，每次开机前要断电， BIOS恢复后才能开机。 🌿那岂不是保存不了超频。 在默频用了一段时间后，他突发奇想，是否可以用arduino做badusb，在开机时模拟键盘，自动设置BIOS呢？他翻出来尘封已久的arduino……<br>最后选择了digispark作为badusb</p></details>        <h1 id="Digispark？">          <a href="#Digispark？" class="heading-link"><i class="fas fa-link"></i></a><a href="#Digispark？" class="headerlink" title="Digispark？"></a>Digispark？</h1>      <p>Digispark是一款类似于Arduino Uno基于Attiny85的微控制器开发板。可用于制作Badusb设备，&nbsp;BadUSB是一种通过重写U盘固件伪装成USB输入设备(键盘,网卡)用于恶意用途的usb设备。杀毒软件由于无法接触到usb固件，所以对它也无可奈何 &nbsp;</p><hr><span id="more"></span>        <h1 id="点个灯">          <a href="#点个灯" class="heading-link"><i class="fas fa-link"></i></a><a href="#点个灯" class="headerlink" title="点个灯"></a>点个灯</h1>      <p>尝试烧写一个示例程序。</p><figure class="highlight plaintext"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//_因为此开发板有两种类型，并且这两种的LED接的引脚不一样，所以下面的代码中，同时在操作两个引脚。_</span><br><span class="line">void setup() {</span><br><span class="line">  pinMode(0, OUTPUT); //LED on Model B </span><br><span class="line">  pinMode(1, OUTPUT); //LED on Model A </span><br><span class="line">} </span><br><span class="line">void loop() { </span><br><span class="line">  digitalWrite(0, HIGH); // turn the LED on (HIGH is the voltage level) </span><br><span class="line">  digitalWrite(1, HIGH); delay(300); // wait for a second </span><br><span class="line">  digitalWrite(0, LOW); // turn the LED off by making the voltage LOW </span><br><span class="line">  digitalWrite(1, LOW); delay(300); // wait for a second </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></div></figure><p>这款开发板比较特殊，先点击下载按钮，当出现如下提示时再插入开发板（而不是插好等下载）</p><figure class="highlight plaintext"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">项目使用了 718 字节，占用了 (11%) 程序存储空间。最大为 6012 字节。</span><br><span class="line">全局变量使用了9字节的动态内存。</span><br><span class="line">Running Digispark Uploader...</span><br><span class="line">Plug in device now... (will timeout in 60 seconds)</span><br></pre></td></tr></tbody></table></div></figure><p>这段时间是用来烧写程序的，因为烧写时引导程序需要通过USB接口与计算机沟通，所以这时候计算机才能识别到开发板。5秒后，内部的boot loader会退出烧写模式，并加载用户程序，所以计算机就识别不到它了，并且此时led才能正常闪烁。</p><details markdown="1"><summary>展开/收起</summary><p></p><figure class="highlight plaintext"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">Running Digispark Uploader...</span><br><span class="line">Plug in device now... (will timeout in 60 seconds)</span><br><span class="line">&gt; Please plug in the device ... </span><br><span class="line">&gt; Press CTRL+C to terminate the program.</span><br><span class="line">&gt; Device is found!</span><br><span class="line">connecting: 16% complete</span><br><span class="line">connecting: 22% complete</span><br><span class="line">connecting: 28% complete</span><br><span class="line">connecting: 33% complete</span><br><span class="line">&gt; Device has firmware version 2.2</span><br><span class="line">&gt; Device signature: 0x1e930b </span><br><span class="line">&gt; Available space for user applications: 6522 bytes</span><br><span class="line">&gt; Suggested sleep time between sending pages: 7ms</span><br><span class="line">&gt; Whole page count: 102  page size: 64</span><br><span class="line">&gt; Erase function sleep duration: 714ms</span><br><span class="line">parsing: 50% complete</span><br><span class="line">&gt; Erasing the memory ...</span><br><span class="line">erasing: 55% complete</span><br><span class="line">erasing: 60% complete</span><br><span class="line">erasing: 65% complete</span><br><span class="line">&gt;&gt; Eep! Connection to device lost during erase! Not to worry</span><br><span class="line">&gt;&gt; This happens on some computers - reconnecting...</span><br><span class="line">&gt;&gt; Reconnected! Continuing upload sequence...</span><br><span class="line">&gt; Starting to upload ...</span><br><span class="line">writing: 70% complete</span><br><span class="line">writing: 75% complete</span><br><span class="line">writing: 80% complete</span><br><span class="line">&gt; Starting the user app ...</span><br><span class="line">running: 100% complete</span><br><span class="line">&gt;&gt; Micronucleus done. Thank you!</span><br></pre></td></tr></tbody></table></div></figure></details><hr>        <h1 id="撸代码">          <a href="#撸代码" class="heading-link"><i class="fas fa-link"></i></a><a href="#撸代码" class="headerlink" title="撸代码"></a>撸代码</h1>      <p>在GitHub上有一个为digispark一键生成代码的project &gt; <span class="exturl"><a class="exturl__link" href="https://github.com/Catboy96/Automator">AutoMator</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://i.loli.net/2021/03/22/7cPFRJKUSrx5kIs.png" alt="长这样">      </p><figure class="highlight plaintext"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">#include </span><br><span class="line"></span><br><span class="line">void loop() {}</span><br><span class="line"></span><br><span class="line">void setup() {</span><br><span class="line">DigiKeyboard.sendKeyStroke(0);</span><br><span class="line">DigiKeyboard.delay(1000);</span><br><span class="line">//START</span><br><span class="line">DigiKeyboard.delay(15000);</span><br><span class="line">//ENTER BIOS</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY\_F1);</span><br><span class="line">DigiKeyboard.delay(1000);</span><br><span class="line">//TO ADVANCED</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY\_RIGHT\_ARROW);</span><br><span class="line">DigiKeyboard.delay(600);</span><br><span class="line">//ENTER JUMPERFREE CONFIGURATION</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY\_ENTER);</span><br><span class="line">DigiKeyboard.delay(600);</span><br><span class="line">//SET OVERCLOCKING MODE</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY\_ENTER);</span><br><span class="line">DigiKeyboard.delay(600);</span><br><span class="line">//MANUAL</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY\_UP\_ARROW);</span><br><span class="line">DigiKeyboard.delay(600);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY\_ENTER);</span><br><span class="line">DigiKeyboard.delay(600);</span><br><span class="line">//TO CPU FREQUENCY</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY\_DOWN\_ARROW);</span><br><span class="line">DigiKeyboard.delay(600);</span><br><span class="line">//ENTER CPU FREQUENCY</span><br><span class="line">DigiKeyboard.print("380");</span><br><span class="line">DigiKeyboard.delay(600);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY\_ENTER);</span><br><span class="line">DigiKeyboard.delay(600);</span><br><span class="line">//BACK TO ADVANCED</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY\_ESC);</span><br><span class="line">DigiKeyboard.delay(600);</span><br><span class="line">//TO CPU CONFIGURATION</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY\_DOWN\_ARROW);</span><br><span class="line">DigiKeyboard.delay(600);</span><br><span class="line">//ENTER CPU CONFIGURATION</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY\_ENTER);</span><br><span class="line">DigiKeyboard.delay(600);</span><br><span class="line">//TO C1E SUPPORT</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY\_DOWN\_ARROW);</span><br><span class="line">DigiKeyboard.delay(600);</span><br><span class="line">//SET C1E SUPPORT</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY\_ENTER);</span><br><span class="line">DigiKeyboard.delay(600);</span><br><span class="line">//DISABLE C1E SUPPORT</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY\_UP\_ARROW);</span><br><span class="line">DigiKeyboard.delay(600);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY\_ENTER);</span><br><span class="line">DigiKeyboard.delay(600);</span><br><span class="line">//SAVE &amp;&amp; EXIT</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY\_F10);</span><br><span class="line">DigiKeyboard.delay(600);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY\_ENTER);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></div></figure>        <h1 id="编译失败了">          <a href="#编译失败了" class="heading-link"><i class="fas fa-link"></i></a><a href="#编译失败了" class="headerlink" title="编译失败了"></a>编译失败了</h1>      <figure class="highlight plaintext"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const unsigned char ascii\_to\_scan\_code\_table \[119\]' previously defined here</span><br><span class="line">const unsigned char ascii\_to\_scan\_code\_table\[\] PROGMEM = {</span><br></pre></td></tr></tbody></table></div></figure><p>这个错误由<code>digispark.h</code>中键位表不全所致。代码中如出现<code>KEY_RIGHT_ARROW</code>等未定义的键时会导致编译出错。 在<code>digispark.h</code>中补全键位表即可</p><figure class="highlight plaintext"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#define KEY\_UP\_ARROW 0x52</span><br><span class="line">#define KEY\_DOWN\_ARROW 0x51</span><br><span class="line">#define KEY\_LEFT\_ARROW 0x50</span><br><span class="line">#define KEY\_RIGHT\_ARROW 0x4F</span><br><span class="line">#define KEY\_ESC 0x29</span><br></pre></td></tr></tbody></table></div></figure><p><a href="https://i.loli.net/2021/03/21/SbuWnvKVU5BrYzh.png">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://i.loli.net/2021/03/21/SbuWnvKVU5BrYzh.png">      </a></p>        <h1 id="怎么没反应🧐">          <a href="#怎么没反应🧐" class="heading-link"><i class="fas fa-link"></i></a><a href="#怎么没反应🧐" class="headerlink" title="怎么没反应🧐"></a>怎么没反应🧐</h1>      <p>好欸，BIOS认digispark是个键盘了 等 再等 再等等 并没有反应 在digispark论坛中，很多人反应digispark模拟的hid键盘并不能在BIOS中使用 <span class="exturl"><a class="exturl__link" href="https://digistump.com/board/index.php?topic=1096.0" title="https://digistump.com/board/index.php?topic=1096.0">https://digistump.com/board/index.php?topic=1096.0</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> <span class="exturl"><a class="exturl__link" href="https://digistump.com/board/index.php?topic=2922.0" title="https://digistump.com/board/index.php?topic=2922.0">https://digistump.com/board/index.php?topic=2922.0</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> 有大佬提出通过替换<code>digispark.h</code>和<code>usbconfig.h</code>文件可以解决这个问题<span class="exturl"><a class="exturl__link" href="https://github.com/bkgarry/DigikeyboardBIOS">https://github.com/bkgarry/DigikeyboardBIOS</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><blockquote><p>These two files (DigiKeyboard.h and usbconfig.h) replace the original digikeyboard files in the following windows directory.<br><code>%localappdata%\\Arduino15\\packages\\digistump\\hardware\\avr\\1.6.7\\libraries\\DigisparkKeyboard</code><br>(please note that the path may change for different versions of the digistump files and Arduino IDE)</p><p>%localappdata% is the environmental variable to take you to your user’s local appdata so the path will work.</p><p>Once these files have been replaced, recompile your existing code to your digispark and you will be able to use the same script to run your keyboard commands within a system BIOS)</p></blockquote>        <h1 id="Working🤗">          <a href="#Working🤗" class="heading-link"><i class="fas fa-link"></i></a><a href="#Working🤗" class="headerlink" title="Working🤗"></a>Working🤗</h1>      <div id="player"></div><script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script><script type="text/javascript">var player = new DogePlayer({    container: document.getElementById('player'),    userId: 1131,    vcode: '0314c74e2e4534b5',    autoPlay: false});</script><p>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://i.loli.net/2021/04/11/Wa3gVdvxGiuzPXD.jpg">      </p>]]></content>
    
    
    <summary type="html">&lt;details markdown=&quot;1&quot;&gt;&lt;summary&gt;展开/收起&lt;/summary&gt;
有一个穷鬼，十分喜欢折腾电脑硬件，可他的父母并不支持他的兴趣爱好，他们认为生为学生就应该心无杂念的一心想着读书。几年过去了，穷鬼的电脑开始渐渐的赶不上时代了，他看了看他的CPU，不由自主地叹了口气：“Pentium E5300…

&lt;p&gt;“ 在他的不懈努力之下，从&lt;a href=&quot;krunk.cn&quot;&gt;K&lt;/a&gt;那里抢来了一块Q6600和一块9600GT 又过了几年，又从一个不知名的仓库里拆出了一块Q9300。&lt;br&gt;  没过多久，他收到一个快递，拆开一看竟然是印着自己名字的GT1030，那天，是他的生日。 一年后，穷鬼上了高中，发现处理器还是差那么亿点点，他看了看自己空空荡荡的钱包，一咬牙，买了一块X5450，装CPU的那天，他心里想着，装上了这块CPU你就无敌了…… 欧耶，点亮了！ 关机。 来BIOS里超个外频。欸，🌿🌿🌿，怎么点不亮了，#￥%……他发现了一个问题，每次开机前要断电， BIOS恢复后才能开机。 🌿那岂不是保存不了超频。 在默频用了一段时间后，他突发奇想，是否可以用arduino做badusb，在开机时模拟键盘，自动设置BIOS呢？他翻出来尘封已久的arduino……&lt;br&gt;最后选择了digispark作为badusb&lt;/p&gt;
&lt;/details&gt;


        &lt;h1 id=&quot;Digispark？&quot;&gt;
          &lt;a href=&quot;#Digispark？&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#Digispark？&quot; class=&quot;headerlink&quot; title=&quot;Digispark？&quot;&gt;&lt;/a&gt;Digispark？&lt;/h1&gt;
      &lt;p&gt;Digispark是一款类似于Arduino Uno基于Attiny85的微控制器开发板。可用于制作Badusb设备，&amp;nbsp;BadUSB是一种通过重写U盘固件伪装成USB输入设备(键盘,网卡)用于恶意用途的usb设备。杀毒软件由于无法接触到usb固件，所以对它也无可奈何 &amp;nbsp;&lt;/p&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="uncategorized" scheme="https://whrblog.online/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>DIY适马佳能AF镜头兼容性修复(\&quot;rechip\&quot;)</title>
    <link href="https://whrblog.online/2020/diy%E9%80%82%E9%A9%AC%E4%BD%B3%E8%83%BDaf%E9%95%9C%E5%A4%B4%E5%85%BC%E5%AE%B9%E6%80%A7%E4%BF%AE%E5%A4%8Drechip/"/>
    <id>https://whrblog.online/2020/diy%E9%80%82%E9%A9%AC%E4%BD%B3%E8%83%BDaf%E9%95%9C%E5%A4%B4%E5%85%BC%E5%AE%B9%E6%80%A7%E4%BF%AE%E5%A4%8Drechip/</id>
    <published>2020-12-22T10:34:51.000Z</published>
    <updated>2022-02-18T15:46:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>原文：<span class="exturl"><a class="exturl__link" href="https://github.com/marcan/sigmafix">Github</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> &amp; <span class="exturl"><a class="exturl__link" href="https://twitter.com/marcan42/status/1046781328148979712?s=09" title="@marcan42">Twitter</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>翻译/校对：<span class="exturl"><a class="exturl__link" href="https://2890.ltd/">Given</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>使用佳能EF卡口的旧的适马镜头不能在新的佳能机身上工作，因为适马不完全反向工程EF协议，没有实现所有需要的命令。这是一个DIY修复方法，使用ATtiny13单片机来修改协议，使镜头重新兼容数码EOS机身。</p><span id="more"></span><p>有些人喜欢称之为 “rechip”，”rechip”实际上是指官方的修复，包括更换镜头中的芯片。但这个修正是一个附加的修正，并没有替换镜头中现有的芯片，所以更应该称之为 “modchip”。</p><hr>        <h1 id="功能介绍">          <a href="#功能介绍" class="heading-link"><i class="fas fa-link"></i></a><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h1>      <p>**<em>低功耗</em>**：该修复在活动模式下（例如拍摄、自动对焦、实时视图模式或更改镜头设置时）消耗约500µA，在睡眠模式下（在标准模式下或相机关闭时，在几秒钟不活动后自动进入）消耗不到1µA。因此，它不会对电池寿命产生可衡量的影响。 **<em>被动式</em>**：本方案不像其他方案那样通过DCL线路由MCU处理，而是使用一个电阻，仅在必要时主动覆盖DCL。因此，在协议的正常运行中，它的影响为零，只改变需要改变的一个位。 **<em>正确的EF协议</em>**：与其他版本不同，这个版本正确解析EF协议，并跟踪命令长度。它还有一个超时功能，如果出了问题，可以与命令重新同步。 [dogevideo]57b05519765a9df3[/dogevideo]</p><hr>        <h1 id="编译">          <a href="#编译" class="heading-link"><i class="fas fa-link"></i></a><a href="#编译" class="headerlink" title="编译"></a><span class="exturl"><a class="exturl__link" href="https://github.com/wanghurui/sigmafix/releases/tag/1.0">编译</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></h1>      <p>输入<code>make</code>来编译工程(需要avra编译器)，或者<code>make flash</code>来用avrdude flash (默认使用 usbtiny 编译器，但你可以使用 <code>make PROGRAMMER=foo</code>来改变编译器类型)。如果你使用其他的编程方法，不要忘了刷写保险丝 （<code>LFUSE=0x72 HFUSE=0xfb</code>）。</p><hr>        <h1 id="安装方法">          <a href="#安装方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h1>      <p>安装时，需要剪断相机到镜头的DCL线，并在线路上插入一个220Ω的电阻，然后将编程后的ATtiny13接上，如下图所示。</p><figure class="highlight plaintext"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">                                  Camera side</span><br><span class="line">                   =========================================</span><br><span class="line">                   DGND  LCLK  DLC  DCL  VDD  PGND/DET  VBAT</span><br><span class="line">                    |     |     |    |    |      |       |</span><br><span class="line">     ATtiny13    ,------------------------+      |       |</span><br><span class="line">    __________   |  |     |     |    |    |      |       |</span><br><span class="line">   |o         |  |  |     |     |    \    |      |       |</span><br><span class="line">  1|RESET  VCC|8-'  |     |     | 220/    |      |       |</span><br><span class="line">  2|PB3    PB2|7    |     |     |  Ω \    |      |       |</span><br><span class="line">  3|PB4    PB1|6----------+     |    /    |      |       |</span><br><span class="line">,-4|GND    PB0|5---------------------+    |      |       |</span><br><span class="line">|  |__________|     |     |     |    |    |      |       |</span><br><span class="line">`-------------------+     |     |    |    |      |       |</span><br><span class="line">                    |     |     |    |    |      |       |</span><br><span class="line">                   DGND  LCLK  DLC  DCL  VDD  PGND/DET  VBAT</span><br><span class="line">                   =========================================</span><br><span class="line">                                   Lens side</span><br></pre></td></tr></tbody></table></div></figure><p><a href="https://cdn.hyh.ink/imger/2020/12/21/sigmafix_lens_diagram.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://cdn.hyh.ink/imger/2020/12/21/sigmafix_lens_diagram.jpg" alt="安装示例">      </a></p><hr>        <h1 id="问题">          <a href="#问题" class="heading-link"><i class="fas fa-link"></i></a><a href="#问题" class="headerlink" title="问题"></a>问题</h1>      <p>佳能EF镜头同时接受<code>12 YY</code>和<code>13 YY</code>两个命令，以<code>YY</code>步数（符号为uint8）改变光圈。旧的胶片佳能机身使用<code>12 YY</code>，而新的数码机身使用<code>13 YY</code>。看来适马并没有通过尝试所有可能的命令来完全逆向工程协议，而只是实现了当时佳能机身使用的命令。因此，老的适马镜头只支持<code>12 YY</code>。如果这样的镜头用在新机身上，光圈永远不会移动。光圈有一个位子反馈给相机：是否在全开位置。相机会根据它所期望的光圈位置来检查这一点。因此，这些老镜头的行为如下：如果光圈是大开（常见情况），镜头只会在相机光圈设置为全开（匹配）的情况下拍摄，否则相机会抛出一个错误。如果光圈不是全开（比如被手动移动了，或者在关机时取下了镜头），那么相机会允许用其他光圈设置拍照，但光圈当然也不会移动。</p><hr>        <h1 id="解决方法">          <a href="#解决方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1>      <p>把命令13补成命令12。他们之间只有一个比特的差异差。由于协议是MSB优先，所以只要前面7个位都收到后，即可完成，也就是说不需要延迟或缓冲协议，而是可以近乎实时完成。</p><hr>        <h1 id="原理">          <a href="#原理" class="heading-link"><i class="fas fa-link"></i></a><a href="#原理" class="headerlink" title="原理"></a>原理</h1>      <p>代码的大部分时间都是处于在睡眠模式下的。当LCLK为低电平时（在命令开始时），它通过低电平INT0中断唤醒芯片。中断处理程序什么也不做，只是从掉电模式返回。然后，主程序禁用中断以防止其重新启动，并接收命令字节。唤醒延迟是这样的：当LCLK为高电平时，芯片正好可以对第一个命令位进行采样，这是预期的采样时间。 在接收到7个命令位后，代码会检查命令0x12/0x13。如果命令匹配，则等待下一个位周期，然后强制DCL为低。这将任何0x13命令改写成0x12，然后等待镜头通过LCLK脉冲确认命令。 由于命令可以有参数，而且没有明确的框架来区分参数和命令，因此代码中包含了所有256个可能的命令以及预期参数长度的表格（根据佳能镜头进行检查）。如果有任何参数字节，它就会读取这些字节，而不进行任何进一步的处理，然后回到睡眠模式，等待下一条命令。 为了在出现故障时实现超时，定时器0设置了0-700µs的超时，并在每个命令开始时启动，同时允许中断。只有当镜头应答一个命令时，它才会停止。如果定时器过期，它就会触发一个中断，该中断不会返回，而是从复位向量重新启动整个程序。这与佳能镜头的行为类似，如果一个命令字节的时间超过700µs，它将启动一个协议复位。</p><div id="player"></div><script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script><script type="text/javascript">var player = new DogePlayer({    container: document.getElementById('player'),    userId: 1131,    vcode: '57b05519765a9df3',    autoPlay: false});</script>]]></content>
    
    
    <summary type="html">&lt;p&gt;原文：&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot; href=&quot;https://github.com/marcan/sigmafix&quot;&gt;Github&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt; &amp;amp; &lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot; href=&quot;https://twitter.com/marcan42/status/1046781328148979712?s=09&quot; title=&quot;@marcan42&quot;&gt;Twitter&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;翻译/校对：&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot; href=&quot;https://2890.ltd/&quot;&gt;Given&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;使用佳能EF卡口的旧的适马镜头不能在新的佳能机身上工作，因为适马不完全反向工程EF协议，没有实现所有需要的命令。这是一个DIY修复方法，使用ATtiny13单片机来修改协议，使镜头重新兼容数码EOS机身。&lt;/p&gt;</summary>
    
    
    
    <category term="uncategorized" scheme="https://whrblog.online/categories/uncategorized/"/>
    
    
    <category term="IT" scheme="https://whrblog.online/tags/IT/"/>
    
    <category term="折腾" scheme="https://whrblog.online/tags/%E6%8A%98%E8%85%BE/"/>
    
    <category term="摄影" scheme="https://whrblog.online/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>DIY Arduino 入射式测光表</title>
    <link href="https://whrblog.online/2020/diy-arduino-%E5%85%A5%E5%B0%84%E5%BC%8F%E6%B5%8B%E5%85%89%E8%A1%A8/"/>
    <id>https://whrblog.online/2020/diy-arduino-%E5%85%A5%E5%B0%84%E5%BC%8F%E6%B5%8B%E5%85%89%E8%A1%A8/</id>
    <published>2020-11-23T11:24:46.000Z</published>
    <updated>2022-02-04T03:46:40.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>A Lightmeter/Flashmeter for photographers, based on Arduino. Components: </p><ul><li>Arduino NANO v.3 </li><li>BH1750 light sensor </li><li>SSD1306 128*96 OLED SPI Display </li><li>Buttons   </li></ul><p>Thanks <span class="exturl"><a class="exturl__link" href="https://github.com/morozgrafix">@morozgrafix</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> for creating schematic diagram for this device. The lightmeter based on Arduino as a main controller and BH1750 as a metering cell.   </p><p>Information is displayed on SSD1306 OLED display. The device is powered by 2 AAA batteries. Functions list:</p><ul><li>  Ambient light metering</li><li>  Flash light metering</li><li>  ND filter correction</li><li>  Aperture priority</li><li>  Shutter speed priority</li><li>  ISO range 8 - 4 000 000</li><li>  Aperture range 1.0 - 3251</li><li>  Shutter speed range 1/10000 - 133 sec</li><li>  ND Filter range ND2 - ND8192</li><li>  Displaying amount of light in Lux.</li><li>  Displaying exposure value, EV</li><li>  Recalculating exposure pair while one of the parameter changing</li><li>  Battery information</li><li>  Power 2xAAA LR03 batteries</li></ul></blockquote><blockquote><p>Detailed information on my site: <span class="exturl"><a class="exturl__link" href="https://www.pominchuk.com/lightmeter/">https://www.pominchuk.com/lightmeter/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p></blockquote><h2 id=""><a href="#" class="headerlink" title=""></a>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://s2.loli.net/2022/02/03/s6LuUXAYDWKbwnT.jpg">      </h2><span id="more"></span><p>DIY测光表测光模式相当于相机内中央平均测光。在大多数拍摄情况下中央平均测光是一种非常实用的测光模式，在拍摄人像旅游照等对于中央亮度起到决定性作用的拍摄场景时，应用广泛。</p>        <h1 id="所需元件">          <a href="#所需元件" class="heading-link"><i class="fas fa-link"></i></a><a href="#所需元件" class="headerlink" title="所需元件"></a>所需元件</h1>      <pre><code>1.  Arduino nano2.  BH1750光强度模块3.  0.96寸 7针SPI接口oled屏幕（SSD1306）</code></pre><p>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://s2.loli.net/2022/02/03/25gABb6LoY4qKQu.jpg">      </p>        <h1 id="源码-amp-amp-焊接">          <a href="#源码-amp-amp-焊接" class="heading-link"><i class="fas fa-link"></i></a><a href="#源码-amp-amp-焊接" class="headerlink" title="源码&amp;&amp;焊接"></a>源码&amp;&amp;焊接</h1>      <figure class="highlight plaintext"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;SPI.h&gt;</span><br><span class="line">#include &lt;Wire.h&gt;</span><br><span class="line">#include &lt;Adafruit\_GFX.h&gt;</span><br><span class="line">#include &lt;Adafruit\_SSD1306.h&gt;</span><br><span class="line">#include &lt;BH1750.h&gt;</span><br><span class="line">#include &lt;EEPROM.h&gt;</span><br><span class="line">#include &lt;avr/sleep.h&gt;</span><br><span class="line">#define SCREEN\_WIDTH 128 // OLED display width, in pixels</span><br><span class="line">#define SCREEN\_HEIGHT 64 // OLED display height, in pixels</span><br><span class="line"></span><br><span class="line">// Declaration for SSD1306 display connected using software SPI (default case):</span><br><span class="line">#define OLED\_DC                 11</span><br><span class="line">#define OLED\_CS                 12</span><br><span class="line">#define OLED\_CLK                8 //10</span><br><span class="line">#define OLED\_MOSI               9 //9</span><br><span class="line">#define OLED\_RESET              10 //13</span><br><span class="line">Adafruit\_SSD1306 display(SCREEN\_WIDTH, SCREEN\_HEIGHT,</span><br><span class="line">  OLED\_MOSI, OLED\_CLK, OLED\_DC, OLED\_RESET, OLED\_CS);</span><br><span class="line"></span><br><span class="line">BH1750 lightMeter;</span><br><span class="line"></span><br><span class="line">#define DomeMultiplier          2.17                    // Multiplier when using a white translucid Dome covering the lightmeter</span><br><span class="line">#define MeteringButtonPin       2                       // Metering button pin</span><br><span class="line">#define PlusButtonPin           3                       // Plus button pin</span><br><span class="line">#define MinusButtonPin          4                       // Minus button pin</span><br><span class="line">#define ModeButtonPin           5                       // Mode button pin</span><br><span class="line">#define MenuButtonPin           6                       // ISO button pin</span><br><span class="line">#define MeteringModeButtonPin   7                       // Metering Mode (Ambient / Flash)</span><br><span class="line">//#define PowerButtonPin          2</span><br><span class="line"></span><br><span class="line">#define MaxISOIndex             57</span><br><span class="line">#define MaxApertureIndex        70</span><br><span class="line">#define MaxTimeIndex            80</span><br><span class="line">#define MaxNDIndex              13</span><br><span class="line">#define MaxFlashMeteringTime    5000                    // ms</span><br><span class="line"></span><br><span class="line">float   lux;</span><br><span class="line">boolean Overflow = 0;                                   // Sensor got Saturated and Display "Overflow"</span><br><span class="line">float   ISOND;</span><br><span class="line">boolean ISOmode = 0;</span><br><span class="line">boolean NDmode = 0;</span><br><span class="line"></span><br><span class="line">boolean PlusButtonState;                // "+" button state</span><br><span class="line">boolean MinusButtonState;               // "-" button state</span><br><span class="line">boolean MeteringButtonState;            // Metering button state</span><br><span class="line">boolean ModeButtonState;                // Mode button state</span><br><span class="line">boolean MenuButtonState;                // ISO button state</span><br><span class="line">boolean MeteringModeButtonState;        // Metering mode button state (Ambient / Flash)</span><br><span class="line"></span><br><span class="line">boolean ISOMenu = false;</span><br><span class="line">boolean NDMenu = false;</span><br><span class="line">boolean mainScreen = false;</span><br><span class="line"></span><br><span class="line">// EEPROM for memory recording</span><br><span class="line">#define ISOIndexAddr        1</span><br><span class="line">#define apertureIndexAddr   2</span><br><span class="line">#define modeIndexAddr       3</span><br><span class="line">#define T\_expIndexAddr      4</span><br><span class="line">#define meteringModeAddr    5</span><br><span class="line">#define ndIndexAddr         6</span><br><span class="line"></span><br><span class="line">#define defaultApertureIndex 12</span><br><span class="line">#define defaultISOIndex      11</span><br><span class="line">#define defaultModeIndex     0</span><br><span class="line">#define defaultT\_expIndex    19</span><br><span class="line"></span><br><span class="line">uint8\_t ISOIndex =          EEPROM.read(ISOIndexAddr);</span><br><span class="line">uint8\_t apertureIndex =     EEPROM.read(apertureIndexAddr);</span><br><span class="line">uint8\_t T\_expIndex =        EEPROM.read(T\_expIndexAddr);</span><br><span class="line">uint8\_t modeIndex =         EEPROM.read(modeIndexAddr);</span><br><span class="line">uint8\_t meteringMode =      EEPROM.read(meteringModeAddr);</span><br><span class="line">uint8\_t ndIndex =           EEPROM.read(ndIndexAddr);</span><br><span class="line"></span><br><span class="line">int battVolts;</span><br><span class="line">#define batteryInterval 10000</span><br><span class="line">double lastBatteryTime = 0;</span><br><span class="line"></span><br><span class="line">#include "lightmeter.h"</span><br><span class="line"></span><br><span class="line">void setup() {  </span><br><span class="line">  pinMode(PlusButtonPin, INPUT\_PULLUP);</span><br><span class="line">  pinMode(MinusButtonPin, INPUT\_PULLUP);</span><br><span class="line">  pinMode(MeteringButtonPin, INPUT\_PULLUP);</span><br><span class="line">  pinMode(ModeButtonPin, INPUT\_PULLUP);</span><br><span class="line">  pinMode(MenuButtonPin, INPUT\_PULLUP);</span><br><span class="line">  pinMode(MeteringModeButtonPin, INPUT\_PULLUP);</span><br><span class="line"></span><br><span class="line">  //Serial.begin(115200);</span><br><span class="line"></span><br><span class="line">  battVolts = getBandgap();  //Determins what actual Vcc is, (X 100), based on known bandgap voltage</span><br><span class="line"></span><br><span class="line">  Wire.begin();</span><br><span class="line">  lightMeter.begin(BH1750::ONE\_TIME\_HIGH\_RES\_MODE\_2);</span><br><span class="line">  //lightMeter.begin(BH1750::ONE\_TIME\_LOW\_RES\_MODE); // for low resolution but 16ms light measurement time.</span><br><span class="line"></span><br><span class="line">  display.begin(SSD1306\_SWITCHCAPVCC, 0x3D);</span><br><span class="line">  display.setTextColor(WHITE);</span><br><span class="line">  display.clearDisplay();</span><br><span class="line"></span><br><span class="line">  // IF NO MEMORY WAS RECORDED BEFORE, START WITH THIS VALUES otherwise it will read "255"</span><br><span class="line">  if (apertureIndex &gt; MaxApertureIndex) {</span><br><span class="line">    apertureIndex = defaultApertureIndex;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  if (ISOIndex &gt; MaxISOIndex) {</span><br><span class="line">    ISOIndex = defaultISOIndex;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  if (T\_expIndex &gt; MaxTimeIndex) {</span><br><span class="line">    T\_expIndex = defaultT\_expIndex;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  if (modeIndex &lt; 0  modeIndex &gt; 1) {</span><br><span class="line">    // Aperture priority. Calculating shutter speed.</span><br><span class="line">    modeIndex = 0;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  if (meteringMode &gt; 1) {</span><br><span class="line">    meteringMode = 0;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  if (ndIndex &gt; MaxNDIndex) {</span><br><span class="line">    ndIndex = 0;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  lux = getLux();</span><br><span class="line">  refresh();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">void loop() {  </span><br><span class="line">  if (millis() &gt;= lastBatteryTime + batteryInterval) {</span><br><span class="line">    lastBatteryTime = millis();</span><br><span class="line">    battVolts = getBandgap();</span><br><span class="line">  }</span><br><span class="line">  </span><br><span class="line">  readButtons();</span><br><span class="line"></span><br><span class="line">  menu();</span><br><span class="line"></span><br><span class="line">  if (MeteringButtonState == 0) {</span><br><span class="line">    // Save setting if Metering button pressed.</span><br><span class="line">    SaveSettings();</span><br><span class="line"></span><br><span class="line">    lux = 0;</span><br><span class="line">    refresh();</span><br><span class="line">    </span><br><span class="line">    if (meteringMode == 0) {</span><br><span class="line">      // Ambient light meter mode.</span><br><span class="line">      lightMeter.configure(BH1750::ONE\_TIME\_HIGH\_RES\_MODE\_2);</span><br><span class="line"></span><br><span class="line">      lux = getLux();</span><br><span class="line"></span><br><span class="line">      if (Overflow == 1) {</span><br><span class="line">        delay(10);</span><br><span class="line">        getLux();</span><br><span class="line">      }</span><br><span class="line"></span><br><span class="line">      refresh();</span><br><span class="line">      delay(200);</span><br><span class="line">    } else if (meteringMode == 1) {</span><br><span class="line">      // Flash light metering</span><br><span class="line">      lightMeter.configure(BH1750::CONTINUOUS\_LOW\_RES\_MODE);</span><br><span class="line"></span><br><span class="line">      unsigned long startTime = millis();</span><br><span class="line">      uint16\_t currentLux = 0;</span><br><span class="line">      lux = 0;</span><br><span class="line"></span><br><span class="line">      while (true) {</span><br><span class="line">        // check max flash metering time</span><br><span class="line">        if (startTime + MaxFlashMeteringTime &lt; millis()) { break; } currentLux = getLux(); delay(16); if (currentLux &gt; lux) {</span><br><span class="line">          lux = currentLux;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line"></span><br><span class="line">      refresh();</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></div></figure>        <h2 id="运行库">          <a href="#运行库" class="heading-link"><i class="fas fa-link"></i></a><a href="#运行库" class="headerlink" title="运行库"></a>运行库</h2>      <ul><li>Adafruit_Circuit_Playground</li><li>Adafruit_Sensor</li><li>Adafruit_SSD1306</li><li>Adafruit-GFX-Library</li><li>BH1750</li></ul><p>2020.11.23</p>        <h1 id="立个flag-2022-02-03">          <a href="#立个flag-2022-02-03" class="heading-link"><i class="fas fa-link"></i></a><a href="#立个flag-2022-02-03" class="headerlink" title="立个flag 2022-02-03"></a>立个flag 2022-02-03</h1>      <ul><li><input disabled="" type="checkbox"> 重新设计PCB</li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;A Lightmeter/Flashmeter for photographers, based on Arduino. Components: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Arduino NANO v.3 &lt;/li&gt;
&lt;li&gt;BH1750 light sensor &lt;/li&gt;
&lt;li&gt;SSD1306 128*96 OLED SPI Display &lt;/li&gt;
&lt;li&gt;Buttons   &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks &lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot; href=&quot;https://github.com/morozgrafix&quot;&gt;@morozgrafix&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt; for creating schematic diagram for this device. The lightmeter based on Arduino as a main controller and BH1750 as a metering cell.   &lt;/p&gt;
&lt;p&gt;Information is displayed on SSD1306 OLED display. The device is powered by 2 AAA batteries. Functions list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;  Ambient light metering&lt;/li&gt;
&lt;li&gt;  Flash light metering&lt;/li&gt;
&lt;li&gt;  ND filter correction&lt;/li&gt;
&lt;li&gt;  Aperture priority&lt;/li&gt;
&lt;li&gt;  Shutter speed priority&lt;/li&gt;
&lt;li&gt;  ISO range 8 - 4 000 000&lt;/li&gt;
&lt;li&gt;  Aperture range 1.0 - 3251&lt;/li&gt;
&lt;li&gt;  Shutter speed range 1/10000 - 133 sec&lt;/li&gt;
&lt;li&gt;  ND Filter range ND2 - ND8192&lt;/li&gt;
&lt;li&gt;  Displaying amount of light in Lux.&lt;/li&gt;
&lt;li&gt;  Displaying exposure value, EV&lt;/li&gt;
&lt;li&gt;  Recalculating exposure pair while one of the parameter changing&lt;/li&gt;
&lt;li&gt;  Battery information&lt;/li&gt;
&lt;li&gt;  Power 2xAAA LR03 batteries&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Detailed information on my site: &lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot; href=&quot;https://www.pominchuk.com/lightmeter/&quot;&gt;https://www.pominchuk.com/lightmeter/&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;
        &lt;img class=&quot;lazyload lazyload-gif&quot; src=&quot;/images/loading.svg&quot; data-src=&quot;https://s2.loli.net/2022/02/03/s6LuUXAYDWKbwnT.jpg&quot;&gt;
      &lt;/h2&gt;</summary>
    
    
    
    <category term="uncategorized" scheme="https://whrblog.online/categories/uncategorized/"/>
    
    
    <category term="IT" scheme="https://whrblog.online/tags/IT/"/>
    
    <category term="折腾" scheme="https://whrblog.online/tags/%E6%8A%98%E8%85%BE/"/>
    
    <category term="摄影" scheme="https://whrblog.online/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>用ESP8266扩展家中局域网</title>
    <link href="https://whrblog.online/2020/%E7%94%A8esp8266%E6%89%A9%E5%B1%95%E5%AE%B6%E4%B8%AD%E5%B1%80%E5%9F%9F%E7%BD%91/"/>
    <id>https://whrblog.online/2020/%E7%94%A8esp8266%E6%89%A9%E5%B1%95%E5%AE%B6%E4%B8%AD%E5%B1%80%E5%9F%9F%E7%BD%91/</id>
    <published>2020-08-07T08:51:22.000Z</published>
    <updated>2021-08-21T02:42:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>via <span class="exturl"><a class="exturl__link" href="https://github.com/rubfi/esp_wifi_repeater">https://github.com/rubfi/esp_wifi_repeater</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><h1 id=""><a href="#" class="headerlink" title=""></a><a href="https://image.krunk.cn/images/2020/08/07/image66b4119bcffcf74e.png">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://image.krunk.cn/images/2020/08/07/image66b4119bcffcf74e.png">      </a></h1>        <h1 id="ESP无线中继器">          <a href="#ESP无线中继器" class="heading-link"><i class="fas fa-link"></i></a><a href="#ESP无线中继器" class="headerlink" title="ESP无线中继器"></a>ESP无线中继器</h1>      <p>这是一个在esp8266作为WiFi NAT路由器的概念和实现。它可以作为现有WiFi网络的无线AP扩展。esp以STA和soft-AP模式透明转发任何IP的流量。因为它使用NAT转发，所以在网络端和连接的站点上都不需要路由条目。站点在192.168.4.0/24网络中默认通过DHCP配置，并从现有的WiFi网络接收其DNS地址。 经过测试，ESP无线中继器可以在两个方向上实现约 5 Mbps，因此即使流媒体也是可能的。ESP无线中继器还允许远程监控（或数据包嗅探），例如使用 Wireshark。</p><span id="more"></span>        <h1 id="烧录">          <a href="#烧录" class="heading-link"><i class="fas fa-link"></i></a><a href="#烧录" class="headerlink" title="烧录"></a>烧录</h1>      <p>在 Windows 上，可以使用”ESP8266 下载工具”在 <span class="exturl"><a class="exturl__link" href="https://espressif.com/en/support/download/other-tools">https://espressif.com/en/support/download/other-tools</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> 从固件目录下载两个文件 0x000000.bin 和 0x10000.bin。<em>（对于 ESP-01，将闪存大小更改为”8Mbit”）</em></p><blockquote><p>使用 V2.0.0 SDK 编译的固件无法在某些 ESP-01 模块上启动。如果遇到这些问题，请使用目录firmware_sdk_1.5.4（地址 0x00000 和 0x40000）。 我用的D1 mini也只能用firmware_sdk_1.5.4编译的固件启动</p></blockquote><p><a href="https://image.krunk.cn/images/2020/08/07/image.png">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://image.krunk.cn/images/2020/08/07/image.png">      </a></p>        <h1 id="使用">          <a href="#使用" class="heading-link"><i class="fas fa-link"></i></a><a href="#使用" class="headerlink" title="使用"></a>使用</h1>      <p>固件烧录完成后可以使用putty连接ESP的com口，波特率115200以修改固件默认配置 <a href="https://image.krunk.cn/images/2020/08/07/image5a41c56eb0cdadb9.png">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://image.krunk.cn/images/2020/08/07/image5a41c56eb0cdadb9.png">      </a> 固件从以下默认配置开始:</p><ul><li>  ssid: ssid, pasword: password</li><li>  ap_ssid: MyAP, ap_password: none, ap_on: 1, ap_open: 1</li><li>  network: 192.168.4.0/24</li></ul><p>这意味着它通过AP sid，密码连接到互联网，并提供一个开放的AP与ap_ssid:MyAP。此默认值可以在文件user_config. h 中更改。可以使用控制台接口覆盖默认值并持续保存为闪存。此控制台可通过 115200 波特的串行端口或 tcp 端口 7777（例如，从连接的 STA 获得”telnet 192.168.4.1 7777”）。 控制台使用以下命令:</p><ul><li>  help: prints a short help message</li><li>  show [configstats]: prints the current config or some statistics&nbsp; <em>eg：show config</em></li><li>set [ssidpasswordap_ssidap_password]&nbsp;<em>value</em>: changes the named config parameter&nbsp;  set ssid TP-LINK_B9C0  &nbsp;  set password ！@#￥%……&amp;*（（  &nbsp;</li><li>  set ap_open [01]: selects, wheter the soft-AP uses WPA2 security (ap_open=0) or no password (ap_open=1)</li><li>  set ap_on [01]: selects, wheter the soft-AP is disabled (ap_on=0) or enabled (ap_on=1)</li><li>  set network&nbsp;<em>ip-addr</em>: sets the IP address of the internal network, network is always /24, router is always x.x.x.1</li><li>  set speed [80160]: sets the CPU clock frequency</li><li>  set vmin&nbsp;<em>voltage</em>: sets the minimum battery voltage in mV. If Vdd drops below, the ESP goes into deep sleep. If 0, nothing happens</li><li>  set vmin_sleep&nbsp;<em>time</em>: sets the time interval in seconds the ESP sleeps on low voltage</li><li>  set config_port&nbsp;<em>portno</em>: sets the port number of the console login (default is 7777, 0 disables remote console config)</li><li>  portmap add [TCPUDP]&nbsp;<em>external_port</em>&nbsp;<em>internal_ip</em>&nbsp;<em>internal_port</em>: adds a port forwarding</li><li>  portmap remove [TCPUDP]&nbsp;<em>external_port</em>: deletes a port forwarding</li><li>  save [dhcp]: saves the current config parameters [+ the current DHCP leases] to flash</li><li>  quit: terminates a remote session</li><li>  reset [factory]: resets the esp, optionally resets WiFi params to default values</li><li>  lock: locks the current config, changes are not allowed</li><li>  unlock&nbsp;<em>password</em>: unlocks the config, requires password of the network AP</li><li>  scan: does a scan for APs</li><li>  monitor [onoff]&nbsp;<em>port</em>: starts and stops monitor server on a given port</li></ul><p><a href="https://image.krunk.cn/images/2020/08/07/image40a310f55c3654de.png">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://image.krunk.cn/images/2020/08/07/image40a310f55c3654de.png">      </a></p>        <h1 id="状态指示灯">          <a href="#状态指示灯" class="heading-link"><i class="fas fa-link"></i></a><a href="#状态指示灯" class="headerlink" title="状态指示灯"></a>状态指示灯</h1>      <p>在默认配置 GPIO2 配置驱动器状态 LED（连接到 GND）与以下指示：</p><ul><li>  常亮：已启动，但未成功连接到 AP</li><li>  闪烁（1 秒）：工作，连接到 AP</li><li>  非正常闪烁：工作，内部网络中的流量</li></ul><p>在user_config.h 中，可以配置备用 GPIO 端口。当配置为 GPIO1 时，它可与 ESP-01 板上的蓝色 LED 一起使用。但是，由于 GPIO1 ist 也是 UART-TX 引脚，这意味着串行控制台不工作。</p>        <h1 id="MQTT-支持">          <a href="#MQTT-支持" class="heading-link"><i class="fas fa-link"></i></a><a href="#MQTT-支持" class="headerlink" title="MQTT 支持"></a>MQTT 支持</h1>      <p>自版本 1.3 以来，路由器具有一个构建中的 MQTT 客户端（感谢 Tuan PM的库<span class="exturl"><a class="exturl__link" href="https://github.com/tuanpmt/esp_mqtt">https://github.com/tuanpmt/esp_mqtt</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>。这可以帮助将路由器/中继器集成到 IoT 中。家庭自动化系统可以例如，根据有关当前关联站的信息做出决策，它可以打开和中继器（例如，根据时间安排），或者简单地用于监视负载。路由器可以连接到本地 MQTT 代理或云中的公开代理。但是，当前它不支持 TLS 加密。 默认情况下，MQTT 客户端处于禁用状态。可以通过将配置参数”mqtt_host”设置为不同于”无”的主机名来启用它。要配置 MQTT，可以设置以下参数：</p><ul><li>  set mqtt_host&nbsp;<em>IP_or_hostname</em>: IP or hostname of the MQTT broker (“none” disables the MQTT client)</li><li>  set mqtt_user&nbsp;<em>username</em>: Username for authentication (“none” if no authentication is required at the broker)</li><li>  set mqtt_user&nbsp;<em>password</em>: Password for authentication</li><li>  set mqtt_id&nbsp;<em>clientId</em>: Id of the client at the broker (default: “ESPRouter_xxxxxx” derived from the MAC address)</li><li>  set mqtt_prefix&nbsp;<em>prefix_path</em>: Prefix for all published topics (default: “/WiFi/ESPRouter_xxxxxx/system”, again derived from the MAC address)</li><li>  set mqtt_command_topic&nbsp;<em>command_topic</em>: Topic subscribed to receive commands, same as from the console. (default: “/WiFi/ESPRouter_xxxxxx/command”, “none” disables commands via MQTT)</li><li>  set mqtt_interval&nbsp;<em>secs</em>: Set the interval in which the router publishs status topics (default: 15s, 0 disables status publication)</li><li>  set mqtt_mask&nbsp;<em>mask_in_hex</em>: Selects which topics are published (default: “ffff” means all)</li></ul><p>MQTT 参数可以使用”显示 mqtt”命令显示。</p><ul><li>  <em>prefix_path</em>/Uptime: System uptime since last reset in s (mask: 0x0020)</li><li>  <em>prefix_path</em>/Vdd: Voltage of the power supply in mV (mask: 0x0040)</li><li>  <em>prefix_path</em>/Bpsin: Bytes/s from stations into the AP (mask: 0x0800)</li><li>  <em>prefix_path</em>/Bpsout: Bytes/s from the AP to stations (mask: 0x1000)</li><li>  <em>prefix_path</em>/Ppsin: Packets/s from stations into the AP (mask: 0x0200)</li><li>  <em>prefix_path</em>/Ppsout: Packets/s from the AP to stations (mask: 0x0400)</li><li>  <em>prefix_path</em>/Bin: Total bytes from stations into the AP (mask: 0x0080)</li><li>  <em>prefix_path</em>/Bout: Total bytes from the AP to stations (mask: 0x0100)</li><li>  <em>prefix_path</em>/NoStations: Number of stations currently connected to the AP (mask: 0x2000)</li><li>  <em>prefix_path</em>/join: MAC address of a station joining the AP (mask: 0x0008)</li><li>  <em>prefix_path</em>/leave: MAC address of a station leaving the AP (mask: 0x0010)</li><li>  <em>prefix_path</em>/IP: IP address of the router when received via DHCP (mask: 0x0002)</li><li>  <em>prefix_path</em>/ScanResult: Separate topic for the results of a “scan” command (one message per found AP) (mask: 0x0004)</li><li>  <em>prefix_path</em>/response: The router publishes on this topic the command line output (mask: 0x0001)</li></ul>        <h1 id="电源管理">          <a href="#电源管理" class="heading-link"><i class="fas fa-link"></i></a><a href="#电源管理" class="headerlink" title="电源管理"></a>电源管理</h1>      <p>中继器监控其电流电源电压（显示在”show stats”命令中）。如果_vmin（_在 mV 中，默认 0）设置为值 &gt; 0，并且电源电压低于此值，则它将进入_深度睡眠模式 vmin_sleep_秒。如果您已将 GPIO16 连接到 RST（很难在 ESP-01 上焊接），它将在此间隔后重新启动，尝试重新连接，并将继续测量。 <a href="https://image.krunk.cn/images/2020/08/07/image9c31a7ebc2011e84.png">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://image.krunk.cn/images/2020/08/07/image9c31a7ebc2011e84.png">      </a></p><hr>        <h1 id="运行截图">          <a href="#运行截图" class="heading-link"><i class="fas fa-link"></i></a><a href="#运行截图" class="headerlink" title="运行截图"></a>运行截图</h1>      <p><a href="https://image.krunk.cn/images/2020/08/12/Z0_GSZR0CDRLTNBEUF.png">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://image.krunk.cn/images/2020/08/12/Z0_GSZR0CDRLTNBEUF.png" alt="Z0_GSZR0CDRLTNBEUF.png">      </a> <a href="https://image.krunk.cn/images/2020/08/12/4VQ0LYHQLDXMCM91P.png">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://image.krunk.cn/images/2020/08/12/4VQ0LYHQLDXMCM91P.png" alt="4VQ0LYHQLDXMCM91P.png">      </a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;via &lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot; href=&quot;https://github.com/rubfi/esp_wifi_repeater&quot;&gt;https://github.com/rubfi/esp_wifi_repeater&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://image.krunk.cn/images/2020/08/07/image66b4119bcffcf74e.png&quot;&gt;
        &lt;img class=&quot;lazyload lazyload-gif&quot; src=&quot;/images/loading.svg&quot; data-src=&quot;https://image.krunk.cn/images/2020/08/07/image66b4119bcffcf74e.png&quot;&gt;
      &lt;/a&gt;&lt;/h1&gt;
        &lt;h1 id=&quot;ESP无线中继器&quot;&gt;
          &lt;a href=&quot;#ESP无线中继器&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#ESP无线中继器&quot; class=&quot;headerlink&quot; title=&quot;ESP无线中继器&quot;&gt;&lt;/a&gt;ESP无线中继器&lt;/h1&gt;
      &lt;p&gt;这是一个在esp8266作为WiFi NAT路由器的概念和实现。它可以作为现有WiFi网络的无线AP扩展。esp以STA和soft-AP模式透明转发任何IP的流量。因为它使用NAT转发，所以在网络端和连接的站点上都不需要路由条目。站点在192.168.4.0/24网络中默认通过DHCP配置，并从现有的WiFi网络接收其DNS地址。 经过测试，ESP无线中继器可以在两个方向上实现约 5 Mbps，因此即使流媒体也是可能的。ESP无线中继器还允许远程监控（或数据包嗅探），例如使用 Wireshark。&lt;/p&gt;</summary>
    
    
    
    <category term="uncategorized" scheme="https://whrblog.online/categories/uncategorized/"/>
    
    
    <category term="IT" scheme="https://whrblog.online/tags/IT/"/>
    
    <category term="折腾" scheme="https://whrblog.online/tags/%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
  <entry>
    <title>太阳神HELIOS 44M-4</title>
    <link href="https://whrblog.online/2020/%E5%A4%AA%E9%98%B3%E7%A5%9Ehelios-44m-4/"/>
    <id>https://whrblog.online/2020/%E5%A4%AA%E9%98%B3%E7%A5%9Ehelios-44m-4/</id>
    <published>2020-05-07T06:11:20.000Z</published>
    <updated>2021-11-07T16:09:44.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://history.whrblog.online/2019/04/07/image-bed-1/20200507134351.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/20200507134351.jpg">      </a></p><span id="more"></span>        <h1 id="Helios-44">          <a href="#Helios-44" class="heading-link"><i class="fas fa-link"></i></a><a href="#Helios-44" class="headerlink" title="Helios 44"></a>Helios 44</h1>      <hr><blockquote><p>&nbsp; Helios 44型135镜头自1950年年初开始研制，基于卡尔-蔡司-耶拿的Biotar 2/58镜头的光学设计，最初被称为“BTK”，即BioTar Krasnogorskij，大意为克拉斯诺戈尔斯克的Biotar镜头。该镜头1958年开始在KMZ工厂正式生产，后来螺口的格里奥斯44镜头搬迁到白俄罗斯明斯克的BELOMO厂生产，卡口镜头依然在KMZ厂生产。1972年，格里奥斯44M问世，标志着该镜头开始向现代镜头演变；1981年格里奥斯44M -4定型，此后逐渐延伸出一个庞大的镜头家族。 Helios 44镜头有多重卡口，除了早期的插刀式之外，还有PK卡口、L39螺口和M42螺口。 Helios 44镜头均采用双高斯结构，使得该镜头可以轻松提供F2的大光圈，同时能够自动校正很多像差。但是由于早期双高斯结构设计上的问题，光圈全开时像场边缘部位的球形畸变校正不彻底，导致焦外光斑被压缩成椭圆形状，越靠近边缘变形越厉害，当焦外是明亮的杂乱光斑时能够形成所谓“漩涡散景”，即大家通常所说的漩焦。 Helios 44镜头版本繁多，如 Helios-44、Helios-44-2、Helios-44-7、Helios-44M、Helios-44M-4、以及后续的Helios-44M-5、Helios-44M-6和Helios-44M-7等。最早因为Helios-44-2有八片光圈，故有“八羽怪”的别称 Helios-44-2有两个用于控制光圈的光圈环，一个是无级调整光圈大小的光圈环，另一个环带有刻度，用于锁定最小光圈，以便在最大光圈下取景完毕后能迅速回到想用的光圈进行拍摄。 从Helios-44M开始，加入了自动顶针，光圈环减少为一个并带有刻度。镜头前面是对焦环，后面是光圈环，使用起来的感觉和如今的手动头一样。从Helios-44M-4开始，开始采用多层镀膜技术，分辨率大为提高</p></blockquote><hr><p><a href="https://image.krunk.cn/images/2020/05/08/IMG_0008.md.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://image.krunk.cn/images/2020/05/08/IMG_0008.md.jpg" alt="IMG_0008.md.jpg">      </a><br><a href="https://image.krunk.cn/images/2020/05/08/IMG_0010.md.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://image.krunk.cn/images/2020/05/08/IMG_0010.md.jpg" alt="IMG_0010.md.jpg">      </a><br><a href="https://i.loli.net/2020/05/08/I2APli6fuxDFqLa.png">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://i.loli.net/2020/05/08/I2APli6fuxDFqLa.png">      </a><br><a href="https://i.loli.net/2020/05/09/j2nG6PfvbEKoZzC.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://i.loli.net/2020/05/09/j2nG6PfvbEKoZzC.jpg">      </a></p><hr>        <h1 id="样片">          <a href="#样片" class="heading-link"><i class="fas fa-link"></i></a><a href="#样片" class="headerlink" title="样片"></a>样片</h1>      <p><a href="https://history.whrblog.online/2019/04/07/image-bed-1/20200503165489.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/20200503165489.jpg">      </a> <a href="https://i.loli.net/2020/05/11/mlf62tdD3BULeIM.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://i.loli.net/2020/05/11/mlf62tdD3BULeIM.jpg">      </a> Canon Kiss X3 f2 0.5‘ ISO 100 <a href="https://history.whrblog.online/2019/04/07/image-bed-1/DSCF1296.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/DSCF1296.JPG" alt="FUJIFILM XT3 f4">      </a> <a href="https://history.whrblog.online/2019/04/07/image-bed-1/DSCF1291.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/DSCF1291.JPG" alt="FUJIFILM XT3 f8">      </a> </p><div id="player"></div><script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script><script type="text/javascript">var player = new DogePlayer({    container: document.getElementById('player'),    userId: 1131,    vcode: 'abb6a1f3fefd5245',    autoPlay: false});</script>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://history.whrblog.online/2019/04/07/image-bed-1/20200507134351.jpg&quot;&gt;
        &lt;img class=&quot;lazyload lazyload-gif&quot; src=&quot;/images/loading.svg&quot; data-src=&quot;https://history.whrblog.online/2019/04/07/image-bed-1/20200507134351.jpg&quot;&gt;
      &lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="uncategorized" scheme="https://whrblog.online/categories/uncategorized/"/>
    
    
    <category term="折腾" scheme="https://whrblog.online/tags/%E6%8A%98%E8%85%BE/"/>
    
    <category term="摄影" scheme="https://whrblog.online/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>4.7 玄风飞行基地</title>
    <link href="https://whrblog.online/2020/4-7/"/>
    <id>https://whrblog.online/2020/4-7/</id>
    <published>2020-04-08T04:04:40.000Z</published>
    <updated>2022-01-24T06:22:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://image.krunk.cn/images/2020/04/13/IMG_0155.md.jpg">      </p><span id="more"></span><p>[dogevideo]1e4b3e5ea84bd042[/dogevideo]</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;
        &lt;img class=&quot;lazyload lazyload-gif&quot; src=&quot;/images/loading.svg&quot; data-src=&quot;https://image.krunk.cn/images/2020/04/13/IMG_0155.md.jpg&quot;&gt;
      &lt;/p&gt;</summary>
    
    
    
    <category term="uncategorized" scheme="https://whrblog.online/categories/uncategorized/"/>
    
    
    <category term="Date" scheme="https://whrblog.online/tags/Date/"/>
    
    <category term="Hexo" scheme="https://whrblog.online/tags/Hexo/"/>
    
    <category term="R.C" scheme="https://whrblog.online/tags/R-C/"/>
    
  </entry>
  
  <entry>
    <title>极致细节的无损视频</title>
    <link href="https://whrblog.online/2020/lossless_video_on_500D_with_magiclantern/"/>
    <id>https://whrblog.online/2020/lossless_video_on_500D_with_magiclantern/</id>
    <published>2020-03-25T01:29:20.000Z</published>
    <updated>2021-08-26T16:53:36.000Z</updated>
    
    <content type="html"><![CDATA[<div id="player"></div><script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script><script type="text/javascript">var player = new DogePlayer({    container: document.getElementById('player'),    userId: 1131,    vcode: 'c7f76db19e56338b'});</script><span id="more"></span><p>说出来可能不信，器材是09年的佳能500D加上外挂<span class="exturl"><a class="exturl__link" href="http://magiclantern.fm/">Magic lantern</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>固件</p>]]></content>
    
    
    <summary type="html">&lt;div id=&quot;player&quot;&gt;&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://player.dogecloud.com/js/loader&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
var player = new DogePlayer({
    container: document.getElementById(&#39;player&#39;),
    userId: 1131,
    vcode: &#39;c7f76db19e56338b&#39;
});
&lt;/script&gt;</summary>
    
    
    
    <category term="uncategorized" scheme="https://whrblog.online/categories/uncategorized/"/>
    
    
    <category term="IT" scheme="https://whrblog.online/tags/IT/"/>
    
    <category term="折腾" scheme="https://whrblog.online/tags/%E6%8A%98%E8%85%BE/"/>
    
    <category term="摄影" scheme="https://whrblog.online/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>在单片机上运行Linux（转载）</title>
    <link href="https://whrblog.online/2020/%E5%9C%A8avr%E5%8D%95%E7%89%87%E6%9C%BA%E4%B8%8A%E8%BF%90%E8%A1%8Clinux/"/>
    <id>https://whrblog.online/2020/%E5%9C%A8avr%E5%8D%95%E7%89%87%E6%9C%BA%E4%B8%8A%E8%BF%90%E8%A1%8Clinux/</id>
    <published>2020-03-11T07:44:39.000Z</published>
    <updated>2021-08-21T02:42:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍">          <a href="#介绍" class="heading-link"><i class="fas fa-link"></i></a><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1>      <p>在Linux论坛中，常见的问题是询问Linux的最低规格是多少。常见的答案是，它需要32位体系结构，一个MMU和至少一兆字节的RAM以适合内核。该项目旨在（并成功）的粉碎这些概念。您在右侧看到的开发板基于ATmega1284p。我也使用ATmega644a取得了同样的成功。该主板没有其他处理器，并且可以启动Linux 2.6.34。实际上，它甚至可以显示完整的Ubuntu堆栈，包括（如果有时间等的话）X和gnome。</p><span id="more"></span><p><a href="https://image.krunk.cn/images/2020/03/11/board1.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://image.krunk.cn/images/2020/03/11/board1.jpg" alt="board1.jpg">      </a></p>        <h1 id="内存">          <a href="#内存" class="heading-link"><i class="fas fa-link"></i></a><a href="#内存" class="headerlink" title="内存"></a><strong>内存</strong></h1>      <p>完整的Linux安装需要兆字节或RAM和带有MMU的32位CPU。这个项目具有所有这些。首先让我们解决RAM。如您所见，板上有一个老式的30针SIMM内存模块。这些已用于基于80286的PC。它与ATmega接口，我编写了代码来访问它以及在规范内对其进行刷新（SDRAM需要不断刷新以避免丢失数据）。有多快？刷新中断每62ms发生一次，占用1.5ms，因此占用了不到3％的CPU。为了便于编程，一次访问一个字节访问RAM。这导致每秒大约300 KB的最大带宽。</p>        <h1 id="存储">          <a href="#存储" class="heading-link"><i class="fas fa-link"></i></a><a href="#存储" class="headerlink" title="存储"></a>存储</h1>      <p>随着对RAM要求的降低，我们有两个要处理。存储不是很难解决的问题。SD卡很容易与使用SPI对话，而我的项目做到了这一点。1GB SD卡可以正常工作，尽管512Mb对于该特定文件系统（Ubuntu Jaunty）而言已足够。ATmega确实有一个硬件SPI模块，但是由于某种原因，它并没有完全解决问题，因此我在接口上做一些改动。它仍然足够快-大约每秒200千字节。这也给项目增加了一个很好的感觉-可以在任何具有足够引脚的微控制器上完成-无需使用硬件模块。 <a href="https://image.krunk.cn/images/2020/03/11/board3.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://image.krunk.cn/images/2020/03/11/board3.jpg" alt="board3.jpg">      </a></p>        <h1 id="中央处理器">          <a href="#中央处理器" class="heading-link"><i class="fas fa-link"></i></a><a href="#中央处理器" class="headerlink" title="中央处理器"></a>中央处理器</h1>      <p>剩下的就是讨厌的32位CPU和MMU要求。那么，AVR没有MMU，而是8位的。为了克服这一障碍，我编写了一个ARM仿真器。ARM是我最熟悉的体系结构，它非常简单，可以轻松编写一个仿真器。为什么要写一个而不是移植一个？好吧，移植别人的代码是没有意思的，再加上我看到的所有仿真器都不是以易于移植到8位设备的方式编写的。原因之一：AVR编译器坚持将ints设置为16位，这样简单的事情如“（1 &lt;&lt; 20）”会给您带来麻烦，并产生零。相反，您需要执行“（1UL &lt;&lt; 20）”。不用说拖曳其他人的未知代码库，寻找所有假定为int且可能会失败的地方将是一场灾难。另外，我希望有机会编写一个不错的模块化ARM仿真器。所以我做了。</p>        <h1 id="其它功能">          <a href="#其它功能" class="heading-link"><i class="fas fa-link"></i></a><a href="#其它功能" class="headerlink" title="其它功能"></a>其它功能</h1>      <p>该板与现实世界的通信是通过串行端口进行的。目前，它连接到运行minicom的PC上的串行端口，但是可以替代地将键盘和字符LCD连接到板上，使其完全独立。板上也有两个LED。它们发出SD卡访问信号。一读，一写。板上也有一个按钮。按住一秒钟，它将在串行端口上吐出模拟CPU的当前有效速度。AVR的主频为24MHz（比其现有的20MHz略有超频）</p>        <h1 id="速度有多快？">          <a href="#速度有多快？" class="heading-link"><i class="fas fa-link"></i></a><a href="#速度有多快？" class="headerlink" title="速度有多快？"></a>速度有多快？</h1>      <p>uARM当然不是速度恶魔。引导到bash提示符（“ <code>init = / bin / bas</code>h”内核命令行）大约需要2个小时。然后再花4个小时来启动整个Ubuntu（“ exec init”，然后登录）。启动X需要更长的时间。有效的仿真CPU速度约为6.5KHz，与您期望的在8位微控制器上仿真32位CPU和MMU相当。<strong>奇怪的是</strong>，系统一旦启动，就可以使用了。您可以输入命令并在一分钟内得到答复。也就是说，实际上您<strong>可以</strong>使用它。例如，我今天用它来格式化SD卡。这绝对不是最快的方法，但我认为它可能是_最便宜_，<em>最慢_，_最容易组装的_，_最低的零件数量_和_最低端的</em>&nbsp;Linux PC。该板是用电线手工焊接的，甚至不需要印刷电路板。</p>        <h1 id="有关仿真器的详细信息">          <a href="#有关仿真器的详细信息" class="heading-link"><i class="fas fa-link"></i></a><a href="#有关仿真器的详细信息" class="headerlink" title="有关仿真器的详细信息"></a>有关仿真器的详细信息</h1>      <p>该仿真器是非常模块化的，可以随意扩展以仿真其他SoC和硬件配置。仿真的CPU是ARMv5TE。前一阵子，我开始支持ARMv6，但是由于不需要，它从未完成（如代码所示）。仿真的SoC是PXA255。由于设计的模块化，您可以替换SoC.c并使用相同的ARMv5TE内核制造一个全新的SoC，或者替换该内核，或者随意替换外围设备。这是有目的的，因为我的意思是该代码也可以作为ARM SoC工作原理的合理清晰演示。CPU模拟器本身的代码不太干净，因为它是一个CPU模拟器。它是几年前写的超过6个月的空闲时间，然后放在一边。最近专门针对该项目复活了它。仿真器实现了一个i-cache来加快处理速度。AVR上<strong>有很多</strong>功能，与我的外部RAM不同，AVR可以以每秒5兆字节的速度访问内部存储器。我从来没有实现过d-cache，但是它在待办事项列表中。对块设备的访问未模拟为SD设备。事实证明这太慢了。相反，我编写了一个半虚拟化的磁盘设备（pvdisk，请参阅pvDisk.tar.bz2，GPL许可证），该设备使用无效的操作码来调用仿真器并访问磁盘。我映像中的ramdisk加载了该pvdisk，然后将chroots加载到/ dev / pvd1。ramdisk作为“ rd.img”包含在内。我使用的“机器类型”是PalmTE2。为什么？因为我对硬件非常熟悉，所以它是我看到的第一个pxa255机器类型。</p>        <h1 id="超级终端？">          <a href="#超级终端？" class="heading-link"><i class="fas fa-link"></i></a><a href="#超级终端？" class="headerlink" title="超级终端？"></a>超级终端？</h1>      <p>您可以使用特殊的操作码向仿真器请求一些服务。在手臂上是<code>0xF7BBBBBB</code>，在拇指上是0xBBBB。选择它们是因为它们在ARM保证未定义的范围内。在R12中传递超级调用号，在R0..R3中传递参数，将返回值放置在R0中。来电：</p><ul><li>  0 =停止仿真</li><li>  1 =打印十进制数</li><li>  2 =打印字符</li><li>  3 =获取滑枕尺寸</li><li>4 =块设备操作（R0 =操作R1 =扇区编号）。请注意，它们不写仿真RAM，而是填充仿真器内部缓冲区，仿真来宾使用另一个超级调用（每次一个字）访问该缓冲区。我本来打算实现DMA，但从未尝试过。操作：<ul><li>  0 = getInfo（如果扇区num为零，则返回num个扇区；如果扇区num为1，则返回以字节为单位的扇区大小）</li><li>  1 =扇区读取</li><li>  2 =扇区写入</li></ul></li><li>  5 =块设备缓冲区访问（R0 =值输入/值输出，R1 =字号，如果写则R2 = 1，否则为0）</li></ul>        <h1 id="支持Thumb？">          <a href="#支持Thumb？" class="heading-link"><i class="fas fa-link"></i></a><a href="#支持Thumb？" class="headerlink" title="支持Thumb？"></a>支持Thumb？</h1>      <p>完全支持Thumb。不过，我作弊了一点，将每个thumb指令解码为等效的ARM指令，然后使用arm模拟器功能执行该指令。它没有其他方法快，但是它很简单并且代码很小。可以使用256KB的查询表，但是我觉得256KB对于微控制器的闪存来说太大了。有些thumb指令不能转换为ARM，而是可以正确处理。</p>        <h1 id="自己建立">          <a href="#自己建立" class="heading-link"><i class="fas fa-link"></i></a><a href="#自己建立" class="headerlink" title="自己建立"></a>自己建立</h1>      <p>出于非商业目的，您绝对可以这样做。接线如下。RAM DQ0..DQ7-&gt; AVR C0..C7。RAM A0..A7-&gt; AVR A0..A7。RAM A8..A11-&gt; AVR B0..B3。RAM nRAS nCAS nWE-&gt; AVR D7 B4 B5。SD DI SCK DO-&gt; AVR B6 B7 D6。LED读写-&gt; AVR D2 D3（LED的另一脚接地）。按钮-&gt; AVR D4（另一条腿接地）。内存可以是任何30针16MB SIMM，并且可以每64ms进行4K周期的CAS-RAS刷新之前的CAS。我所用的（OWC）可以在线购买，价格为几美元。原理图如图所示。点击查看大图 <a href="https://image.krunk.cn/images/2020/03/11/uARM_big.png">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://image.krunk.cn/images/2020/03/11/uARM_big.png" alt="uARM_big.png">      </a> &nbsp;</p>        <h1 id="源代码？">          <a href="#源代码？" class="heading-link"><i class="fas fa-link"></i></a><a href="#源代码？" class="headerlink" title="源代码？"></a>源代码？</h1>      <p>有点混乱，但确实有效。趁热获取：<span class="exturl"><a class="exturl__link" href="http://dmitry.gr/images/uARM.zip">LINK</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>。许可证对于非商业用途，只要您将许可证文件与源保持在一起并发布所有更改，如果用于商业用途，请与我联系，我们会达成协议。要构建仿真器以在PC上进行尝试，请键入“ make”</p><ul><li>  使用“ ./uARM DISK_IMAGE”。要构建优化的PC版本，</li><li>  使用“ make BUILD = opt”。为AVR构建，</li><li>  使用“ make BUILD = avr”。它目前针对ATmega1284p。</li><li>  要以ATmega644为目标，除了更改makefile之外，还要减少icache.h中的数字，以使icache足够小以适合644中的内部RAM。归档文件中还包括1284p的最终十六进制文件。</li></ul>        <h2 id="启动过程">          <a href="#启动过程" class="heading-link"><i class="fas fa-link"></i></a><a href="#启动过程" class="headerlink" title="启动过程"></a>启动过程</h2>      <p>为了节省AVR中的代码空间，仿真器中几乎没有启动代码。实际上，“ ROM”总共有50个字节：8个字节可切换到拇指模式，还有一些拇指代码可读取SD卡的第一个扇区并以拇指模式跳至该扇区（请参见EmbeddedBoot.c）。SD卡的MBR具有另一个引导加载程序（以拇指模式编写）。这一节着眼于MBR，找到了活动分区并将其内容加载到RAM的末尾。然后，它跳转到目标ram地址+ 512（请参阅mbrBoot.c）。这里有第三大引导加载程序ELLE（请参阅ELLE.c）。这将重定位虚拟磁盘，设置ATAGS，然后调用内核。提供所有二进制文件和源文件，以便您可以随意制作自己的图像。引导过程应让人联想到PC引导。:)包含的mkbootimg。sh工具可用于制作启动分区的工作映像。完整的工作磁盘映像？<span class="exturl"><a class="exturl__link" href="https://mega.nz/#!0wQSSSbT!VHOZ3XhWDeyxMb8yvuCBw-GfJkpYNnnjIgl9SKWLi6Q">链接</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>。 &nbsp;</p><p><span class="exturl"><a class="exturl__link" href="http://dmitry.gr/?r=05.Projects&amp;proj=07.%20Linux%20on%208bit">via</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;介绍&quot;&gt;
          &lt;a href=&quot;#介绍&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;
      &lt;p&gt;在Linux论坛中，常见的问题是询问Linux的最低规格是多少。常见的答案是，它需要32位体系结构，一个MMU和至少一兆字节的RAM以适合内核。该项目旨在（并成功）的粉碎这些概念。您在右侧看到的开发板基于ATmega1284p。我也使用ATmega644a取得了同样的成功。该主板没有其他处理器，并且可以启动Linux 2.6.34。实际上，它甚至可以显示完整的Ubuntu堆栈，包括（如果有时间等的话）X和gnome。&lt;/p&gt;</summary>
    
    
    
    <category term="uncategorized" scheme="https://whrblog.online/categories/uncategorized/"/>
    
    
    <category term="IT" scheme="https://whrblog.online/tags/IT/"/>
    
    <category term="Linux" scheme="https://whrblog.online/tags/Linux/"/>
    
    <category term="折腾" scheme="https://whrblog.online/tags/%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
  <entry>
    <title>ESP8266+Blynk做一个根开机棒</title>
    <link href="https://whrblog.online/2020/esp8266blynk%E5%81%9A%E4%B8%80%E4%B8%AA%E6%A0%B9%E5%BC%80%E6%9C%BA%E6%A3%92/"/>
    <id>https://whrblog.online/2020/esp8266blynk%E5%81%9A%E4%B8%80%E4%B8%AA%E6%A0%B9%E5%BC%80%E6%9C%BA%E6%A3%92/</id>
    <published>2020-01-24T06:32:36.000Z</published>
    <updated>2022-02-19T14:42:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://image.krunk.cn/images/2020/01/24/IMG_20200124_131834-01.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://image.krunk.cn/images/2020/01/24/IMG_20200124_131834-01.md.jpg" alt="IMG_20200124_131834-01.jpg">      </a></p><span id="more"></span>        <h1 id="介绍">          <a href="#介绍" class="heading-link"><i class="fas fa-link"></i></a><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1>      <p>这个应用程序是为启动服务器编写的，只支持启动一个设备。它需要在源码中配置WOL服务器以及配置服务器的静态IP。</p>        <h1 id="Devices">          <a href="#Devices" class="heading-link"><i class="fas fa-link"></i></a><a href="#Devices" class="headerlink" title="Devices"></a>Devices</h1>      <ol><li> ESP8266</li><li> Arduino IDE（所需库文件<span class="exturl"><a class="exturl__link" href="https://github.com/dancol90/ESP8266Ping">ESP8266Ping</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>,<span class="exturl"><a class="exturl__link" href="https://github.com/esp8266/Arduino">ESP8266 Plug-in</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>,<span class="exturl"><a class="exturl__link" href="https://github.com/blynkkk/blynk-library/releases/download/">Blynk</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>）</li><li> Blynk</li></ol><div class="table-container"><table><thead><tr><th>Variable name</th><th>Default value</th><th>Comment</th></tr></thead><tbody><tr><td>auth</td><td>Blynk_AuthToken</td><td>Blynk Auth Token (You get after the project was created in Blynk)</td></tr><tr><td>ssid</td><td>WiFi_SSID</td><td>Your WiFi network name</td></tr><tr><td>pass</td><td>WiFi_Password</td><td>Your WiFi network password</td></tr><tr><td>ip</td><td>192.168.0.123</td><td>Static IP for your WOL Server</td></tr><tr><td>gateway</td><td>192.168.0.1</td><td>Your Gateway IP address</td></tr><tr><td>bcastAddr</td><td>192.168.0.255</td><td>Your Broadcast IP address</td></tr><tr><td>subnet</td><td>255.255.255.0</td><td>Your Subnet Mask IP address</td></tr><tr><td>dns</td><td>1.1.1.1</td><td>IP address of your preferred DNS server</td></tr><tr><td>device_ip</td><td>192.168.0.234</td><td>Static IP address of device to be turned on (used for ping)</td></tr><tr><td>macAddr</td><td>aa:bb:cc:dd:ee:ff</td><td>Mac address of device to be turned on (important for the magic packet)</td></tr><tr><td>email</td><td><span class="exturl"><a class="exturl__link" href="mailto:example@example.com">example@example.com</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></td><td>Email address for notifications (when the device could not be turned on within the set time limit)</td></tr><tr><td>device_name</td><td>NAS</td><td>The short name of your device that turns on</td></tr><tr><td>boot_time</td><td>45</td><td>Maximum time to wait for the device to turn on (used for notification, read the known issues!)</td></tr></tbody></table></div><hr>        <h1 id="需要更改的代码">          <a href="#需要更改的代码" class="heading-link"><i class="fas fa-link"></i></a><a href="#需要更改的代码" class="headerlink" title="需要更改的代码"></a>需要更改的代码</h1>      <figure class="highlight plaintext"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">//WiFi config</span><br><span class="line">const char auth\[\] = "Blynk\_AuthToken";  //Blynk Auth Token (You get after the project was created in Blynk)</span><br><span class="line">const char ssid\[\] = "WiFi\_SSID"; </span><br><span class="line">const char pass\[\] = "WiFi\_Password";</span><br><span class="line"></span><br><span class="line">const IPAddress ip(192, 168, 0, 123); //Static IP for your WOL Server</span><br><span class="line">const IPAddress gateway(192, 168, 0, 1);</span><br><span class="line">const IPAddress bcastAddr(192, 168, 0, 255);</span><br><span class="line">const IPAddress subnet(255, 255, 255, 0);</span><br><span class="line">const IPAddress dns(1, 1, 1, 1);  //IP address of your preferred DNS server</span><br><span class="line"></span><br><span class="line">//WOL device config</span><br><span class="line">const IPAddress device\_ip(192, 168, 0, 234); //Static IP address of device to be turned on (used for ping)</span><br><span class="line">byte macAddr\[6\] = {0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff};  //Mac address of device to be turned on (important for the magic packet)</span><br><span class="line"></span><br><span class="line">//Alert config</span><br><span class="line">const char email\[\] = "example@example.com";</span><br><span class="line">const char device\_name\[\] = "NAS";</span><br><span class="line">const uint16\_t boot\_time = 45;//number for countdown (It does not represent seconds, but it's close, read the known issues!)</span><br></pre></td></tr></tbody></table></div></figure><p><a href="https://image.krunk.cn/images/2020/01/24/-1.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://image.krunk.cn/images/2020/01/24/-1.jpg" alt="-1.jpg">      </a></p>        <h1 id="Code">          <a href="#Code" class="heading-link"><i class="fas fa-link"></i></a><a href="#Code" class="headerlink" title="Code"></a>Code</h1>      <figure class="highlight plaintext"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line">//#define DEBUG</span><br><span class="line">#ifdef DEBUG</span><br><span class="line">#define BLYNK\_PRINT Serial</span><br><span class="line">//#define BLYNK\_DEBUG</span><br><span class="line">//#define ENABLE\_DEBUG\_PING</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">#define BLYNK\_NO\_BUILTIN//disable built-in analog and digital operations.</span><br><span class="line">//#define BLYNK\_NO\_INFO//disable providing info about device to the server. (saving time)</span><br><span class="line"></span><br><span class="line">#include &lt;ESP8266WiFi.h&gt;</span><br><span class="line">#include &lt;BlynkSimpleEsp8266.h&gt;</span><br><span class="line">#include &lt;WiFiUdp.h&gt;</span><br><span class="line">#include &lt;ESP8266Ping.h&gt; </span><br><span class="line"></span><br><span class="line">//blynk colors</span><br><span class="line">#define BLYNK\_GREEN"#23C48E"</span><br><span class="line">#define BLYNK\_BLUE"#04C0F8"</span><br><span class="line">#define BLYNK\_YELLOW"#ED9D00"</span><br><span class="line">#define BLYNK\_RED"#D3435C"</span><br><span class="line">#define BLYNK\_DARK\_BLUE"#5F7CD8"</span><br><span class="line"></span><br><span class="line">//WiFi config</span><br><span class="line">const char auth\[\] = "Blynk\_AuthToken";</span><br><span class="line">const char ssid\[\] = "WiFi\_SSID";</span><br><span class="line">const char pass\[\] = "WiFi\_Password";</span><br><span class="line"></span><br><span class="line">const IPAddress ip(192, 168, 0, 123);</span><br><span class="line">const IPAddress gateway(192, 168, 0, 1);</span><br><span class="line">const IPAddress bcastAddr(192, 168, 0, 255);</span><br><span class="line">const IPAddress subnet(255, 255, 255, 0);</span><br><span class="line">const IPAddress dns(1, 1, 1, 1);</span><br><span class="line"></span><br><span class="line">//WOL device config</span><br><span class="line">const IPAddress device\_ip(192, 168, 0, 234);</span><br><span class="line">byte macAddr\[6\] = {0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff};</span><br><span class="line"></span><br><span class="line">//Alert config</span><br><span class="line">const char email\[\] = "example@example.com";</span><br><span class="line">const char device\_name\[\] = "NAS";</span><br><span class="line">const uint16\_t boot\_time = 45;//number for countdown (It does not represent seconds, read the known issues!)</span><br><span class="line"></span><br><span class="line">//WOL</span><br><span class="line">#define MAGIC\_PACKET\_LENGTH 102</span><br><span class="line">#define PORT\_WAKEONLAN 9</span><br><span class="line">byte magicPacket\[MAGIC\_PACKET\_LENGTH\];</span><br><span class="line">unsigned int localPort = 9;</span><br><span class="line"></span><br><span class="line">WiFiUDP udp;</span><br><span class="line"></span><br><span class="line">//pins</span><br><span class="line">#define STATE\_PINV0</span><br><span class="line">#define BUTTON\_PINV1</span><br><span class="line">#define PING\_TIME\_PINV2</span><br><span class="line">#define RSSI\_PINV3</span><br><span class="line"></span><br><span class="line">//state</span><br><span class="line">struct WOLServerState {</span><br><span class="line">bool IsOnline;</span><br><span class="line">uint16\_t boot\_time;</span><br><span class="line">bool boot\_error;</span><br><span class="line">uint16\_t ping;</span><br><span class="line">uint32\_t previousMillis;</span><br><span class="line">uint32\_t interval;</span><br><span class="line">};</span><br><span class="line">WOLServerState currentState = { false, 0, false, 0, 0, 5000UL };</span><br><span class="line"></span><br><span class="line">void setup() {</span><br><span class="line">#ifdef DEBUG</span><br><span class="line">Serial.begin(115200);</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">connectWiFi();</span><br><span class="line">connectBlynk();</span><br><span class="line"></span><br><span class="line">//if (Blynk.connected()) {</span><br><span class="line">if (udp.begin(localPort) == 1) {</span><br><span class="line">BLYNK\_LOG("udp begin OK");</span><br><span class="line">buildMagicPacket();</span><br><span class="line">} else {</span><br><span class="line">delay(500);</span><br><span class="line">ESP.restart();</span><br><span class="line">}</span><br><span class="line">//}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">void connectWiFi() {</span><br><span class="line">WiFi.mode(WIFI\_STA);</span><br><span class="line">WiFi.hostname("WOL server");</span><br><span class="line">WiFi.config(ip, dns, gateway, subnet);</span><br><span class="line">WiFi.begin(ssid, pass);</span><br><span class="line"></span><br><span class="line">int count = 0;</span><br><span class="line">while (WiFi.status() != WL\_CONNECTED) {</span><br><span class="line">delay(250);</span><br><span class="line">digitalWrite(LED\_BUILTIN, HIGH);</span><br><span class="line">delay(250);</span><br><span class="line">digitalWrite(LED\_BUILTIN, LOW);</span><br><span class="line"></span><br><span class="line">count++;</span><br><span class="line">if (count &gt; 20) {</span><br><span class="line">delay(500);</span><br><span class="line">ESP.restart();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">//BLYNK\_LOG("WiFi connected, IP: %s", WiFi.localIP().toString());</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">void connectBlynk() {</span><br><span class="line">Blynk.config(auth);</span><br><span class="line">Blynk.disconnect();</span><br><span class="line"></span><br><span class="line">int count = 0;</span><br><span class="line">while (Blynk.connect(10000) == false) {</span><br><span class="line">delay(250);</span><br><span class="line">digitalWrite(LED\_BUILTIN, HIGH);</span><br><span class="line">delay(250);</span><br><span class="line">digitalWrite(LED\_BUILTIN, LOW);</span><br><span class="line"></span><br><span class="line">count++;</span><br><span class="line">if (count &gt; 20) {</span><br><span class="line">delay(500);</span><br><span class="line">ESP.restart();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">BLYNK\_LOG("Blynk connected");</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">void loop() {</span><br><span class="line">// Reconnect WiFi</span><br><span class="line">if (WiFi.status() != WL\_CONNECTED) {</span><br><span class="line">connectWiFi();</span><br><span class="line">return;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">// Reconnect to Blynk Cloud</span><br><span class="line">if (!Blynk.connected()) {</span><br><span class="line">connectBlynk();</span><br><span class="line">return;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">uint32\_t currentMillis = millis();</span><br><span class="line">if (currentMillis - currentState.previousMillis &gt;= currentState.interval) {</span><br><span class="line">currentState.previousMillis = currentMillis;</span><br><span class="line"></span><br><span class="line">if (currentState.boot\_time == 0) {</span><br><span class="line">currentState.interval = 5000UL;</span><br><span class="line">} else {</span><br><span class="line">currentState.boot\_time--;</span><br><span class="line">if (currentState.boot\_time == 0) {</span><br><span class="line">currentState.boot\_error = true;</span><br><span class="line">Blynk.email(email, "{DEVICE\_NAME} : Alert", String(device\_name) + " could not be turned on!");</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">if (Ping.ping(device\_ip, 1)) {</span><br><span class="line">currentState.IsOnline = true;</span><br><span class="line">currentState.boot\_error = false;</span><br><span class="line">currentState.boot\_time = 0;</span><br><span class="line">currentState.ping = Ping.averageTime();</span><br><span class="line">} else {</span><br><span class="line">currentState.IsOnline = false;</span><br><span class="line">currentState.ping = 0;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">Blynk.run();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">// Generate magic packet</span><br><span class="line">void buildMagicPacket() {</span><br><span class="line">memset(magicPacket, 0xFF, 6);</span><br><span class="line">for (int i = 0; i &lt; 16; i++) { int ofs = i \* sizeof(macAddr) + 6; memcpy(&amp;magicPacket\[ofs\], macAddr, sizeof(macAddr)); } } //BLYNK\_CONNECTED() { // Blynk.syncVirtual(BUTTON\_PIN); //} // BOOT PC button handler of application BLYNK\_WRITE(BUTTON\_PIN) { if (!currentState.IsOnline &amp;&amp; currentState.boot\_time == 0) { BLYNK\_LOG("AppButtonWakeOnLan: value=%d", param.asInt()); udp.beginPacket(bcastAddr, PORT\_WAKEONLAN); udp.write(magicPacket, MAGIC\_PACKET\_LENGTH); udp.endPacket(); currentState.boot\_time = boot\_time; currentState.interval = 1000UL; } } BLYNK\_READ(STATE\_PIN) { Blynk.virtualWrite(RSSI\_PIN, WiFi.RSSI()); Blynk.virtualWrite(PING\_TIME\_PIN, currentState.ping); if (currentState.IsOnline) { Blynk.setProperty(STATE\_PIN, "color", BLYNK\_GREEN); Blynk.virtualWrite(STATE\_PIN, String(device\_name) + " is Online"); Blynk.setProperty(BUTTON\_PIN, "color", BLYNK\_DARK\_BLUE); Blynk.setProperty(BUTTON\_PIN, "offLabel", String(device\_name) + " running..."); Blynk.setProperty(BUTTON\_PIN, "onLabel", String(device\_name) + " running..."); } else if (!currentState.IsOnline &amp;&amp; currentState.boot\_time &gt; 0) {</span><br><span class="line">Blynk.setProperty(STATE\_PIN, "color", BLYNK\_BLUE);</span><br><span class="line">Blynk.virtualWrite(STATE\_PIN, "Waiting for ping...");</span><br><span class="line"></span><br><span class="line">Blynk.setProperty(BUTTON\_PIN, "color", BLYNK\_YELLOW);</span><br><span class="line">Blynk.setProperty(BUTTON\_PIN, "offLabel", currentState.boot\_time);</span><br><span class="line">Blynk.setProperty(BUTTON\_PIN, "onLabel", "Waiting for ping...");</span><br><span class="line">} else if (!currentState.IsOnline &amp;&amp; currentState.boot\_time == 0 &amp;&amp; currentState.boot\_error) {</span><br><span class="line">Blynk.setProperty(STATE\_PIN, "color", BLYNK\_RED);</span><br><span class="line">Blynk.virtualWrite(STATE\_PIN, "Oops! Something happened, Try It Again!");</span><br><span class="line"></span><br><span class="line">Blynk.setProperty(BUTTON\_PIN, "color", BLYNK\_YELLOW);</span><br><span class="line">Blynk.setProperty(BUTTON\_PIN, "offLabel", "Try It Again");</span><br><span class="line">Blynk.setProperty(BUTTON\_PIN, "onLabel", "Magic Packet has been sent");</span><br><span class="line">} else {</span><br><span class="line">Blynk.setProperty(STATE\_PIN, "color", BLYNK\_RED);</span><br><span class="line">Blynk.virtualWrite(STATE\_PIN, String(device\_name) + " is Offline");</span><br><span class="line"></span><br><span class="line">Blynk.setProperty(BUTTON\_PIN, "color", BLYNK\_BLUE);</span><br><span class="line">Blynk.setProperty(BUTTON\_PIN, "offLabel", "Turn On");</span><br><span class="line">Blynk.setProperty(BUTTON\_PIN, "onLabel", "Magic Packet has been sent");</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></div></figure>        <h1 id="Blynk">          <a href="#Blynk" class="heading-link"><i class="fas fa-link"></i></a><a href="#Blynk" class="headerlink" title="Blynk"></a>Blynk</h1>      <p>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://image.krunk.cn/images/2020/01/24/TIM20200124142924.md.jpg" alt="TIM20200124142924.jpg">               <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://camo.githubusercontent.com/51545377e6fb634a2db39a6f43c8f83f7cafd31c/68747470733a2f2f7777772e656d7369742e736b2f536861726564436f6e74656e742f4769744875622f455350383236365f426c796e6b5f574f4c5f5365727665722f325f7468756d626e61696c2e706e67">       &nbsp;</p><p><span class="exturl"><a class="exturl__link" href="https://github.com/Pnoxi/ESP8266_Blynk_WOL_Server">via</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://image.krunk.cn/images/2020/01/24/IMG_20200124_131834-01.jpg&quot;&gt;
        &lt;img class=&quot;lazyload lazyload-gif&quot; src=&quot;/images/loading.svg&quot; data-src=&quot;https://image.krunk.cn/images/2020/01/24/IMG_20200124_131834-01.md.jpg&quot; alt=&quot;IMG_20200124_131834-01.jpg&quot;&gt;
      &lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="uncategorized" scheme="https://whrblog.online/categories/uncategorized/"/>
    
    
    <category term="IT" scheme="https://whrblog.online/tags/IT/"/>
    
    <category term="Linux" scheme="https://whrblog.online/tags/Linux/"/>
    
    <category term="折腾" scheme="https://whrblog.online/tags/%E6%8A%98%E8%85%BE/"/>
    
    <category term="Raspi/Orapi" scheme="https://whrblog.online/tags/Raspi-Orapi/"/>
    
  </entry>
  
  <entry>
    <title>行摄北疆</title>
    <link href="https://whrblog.online/2019/%E6%96%B0%E7%96%86/"/>
    <id>https://whrblog.online/2019/%E6%96%B0%E7%96%86/</id>
    <published>2019-08-17T23:46:27.000Z</published>
    <updated>2022-02-20T03:01:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2019-8-17">          <a href="#2019-8-17" class="heading-link"><i class="fas fa-link"></i></a><a href="#2019-8-17" class="headerlink" title="2019.8.17"></a>2019.8.17</h2>      <p>飞机承载着我对遥远北疆的热忱，在滑行道上缓缓升腾，在气流的颠簸里，我知道我此时已在离北疆越来越近的路途上了，那是个令人心驰神往的名词——北疆。</p><p>从平原到戈壁，从绿洲到雪山。造物主的鬼斧神工恍若中国水墨的手笔一般，那奇妙的白茫茫的雾爬进了我们的视野，模糊了云层的日光，并把那高空底下的层峦叠嶂幻化成了迷一般的幢幢怪影。 终于来到了向往已久的天山北麓，大自然用五彩斑斓的画笔给黄土高坡添置了别样的色彩，新疆——触手可及。 <a href="https://i.loli.net/2021/06/15/aPrDQYqlKEcwdF8.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://i.loli.net/2021/06/15/aPrDQYqlKEcwdF8.jpg">      </a> <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0431.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0431.JPG">      </a> <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0455.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0455.JPG">      </a> <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0449.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0449.JPG">      </a> 雪山，雪岭无限延伸；雪峰，肃立威严。北国的冬雪尚未化尽，一座座山峦此起彼伏、银装素裹、延绵千里，那盘踞的身形恍若九天银河洒落人间阅尽千帆。那山脚下干的树枝虬劲疏落，在蓝天夏日的背景下仿佛国画，偏爱空白，也颇留意趣。有时有一群飞鸟循声觅食，在夕阳里，徒留几声凄清的脆鸣，袅袅于空谷山间。</p><!-- more --><hr>        <h2 id="2019-8-18">          <a href="#2019-8-18" class="heading-link"><i class="fas fa-link"></i></a><a href="#2019-8-18" class="headerlink" title="2019.8.18"></a>2019.8.18</h2>      <p>行驶在独库公路上才能感到真正的孤独，裸露的岩壁，空无一人的公路，满是落石的路基。在这里，每一块岩石都在诉说这不同的故事。 <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0633.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0633.JPG">      </a> 雪山半掩琵琶半遮面似得躲在云层后面，不由得增加了几分神秘感。 <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0648.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0648.JPG">      </a> 在这条一天可以体验四季的路上，每一个峰回路转都有别样的一番景致，正如移步换景一般，上一帧还是深不见底大峡谷，下一帧就变成了沟壑纵横的雪山。从针叶林到高山草甸再到雪线……甚是迷人。 <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0644.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0644.JPG">      </a> 翻越雪山，一扫之前裸露的岩石滩，取而代之的是那郁郁葱葱的高山草甸，那是天公的神来之笔，满眼的苍翠从眼前开始延伸，直至渺远的他方，我想它可能是上苍对人世浮沉的些微怜悯。而那悠然的牛羊带着那偶尔露怯的眼神，惊慌地穿过公路，晃悠悠朝着远处走去，印着薄日的光，留下几个淡淡背影……极目远眺，那是修建独库公路的人在这片荒凉的土地挥着汗洒下泪，而我此时正踏在祖国的这方土地之上，闻着这方泥土淳朴的芬芳，我想那当是工人们灵魂的芬芳。 <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0695.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0695.JPG">      </a></p><hr>        <h2 id="2019-8-19">          <a href="#2019-8-19" class="heading-link"><i class="fas fa-link"></i></a><a href="#2019-8-19" class="headerlink" title="2019.8.19"></a>2019.8.19</h2>      <p>再次飞驰在独库公路上，太阳渐渐地从云层后露了出来，晨曦撒在远处巍峨的雪山上，犹如戴上了金顶。远山层峦叠起，草地色泽丰富，湖泊清如明镜，牛羊马儿悠闲自得。 <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0755.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0755.JPG">      </a> 平直的公路，向前飞驰的轿车，耳边呼呼的风声，再一次把我们带入雪山，驶向南疆，太阳又羞答答地躲在了云层之后。延绵的山路像绸带一般缠绕在延绵的雪上。 海拔一点点上升，车外气温一点点下降，我们距离雪线的距离也越来越近。 <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0816.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0816.JPG">      </a> 越过雪线，翻过那重峦叠嶂，气势滂沱的天山山脉，又是延绵不断的下坡路，但是景致与北疆截然不同：这些“远看成岭侧成峰，远近高低各不同”的红色岩壁，静静的屹立在广袤的戈壁滩上，那是一种岑峦迭起的壮丽，是一种傲风凌雪的气度，更是一种气定山河的坦荡。 <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0846.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0846.JPG">      </a> 库车大峡谷集雄、静、险、幽、神为一体，无不赞美叫绝。两侧红色峡谷陡峭险峻，谷内蜿蜒曲折、幽静深邃。 <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0868.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0868.JPG">      </a> <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0864.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0864.JPG">      </a> 再折回，天气如同孩子似得，豆大的雨点从天上打下来。再向前，翻回之前的雪山。随着海拔的再次上升，豆大的雨点变成了鹅毛一般的大雪。穿出隧道，雪花如同幕布一样飘落。在这里我终于体验到了千里冰封万里雪飘的北国风光。 <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0921.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0921.JPG">      </a> <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0954.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0954.JPG">      </a></p><hr>        <h2 id="2019-8-20">          <a href="#2019-8-20" class="heading-link"><i class="fas fa-link"></i></a><a href="#2019-8-20" class="headerlink" title="2019.8.20"></a>2019.8.20</h2>      <p>那拉提在准噶尔蒙古语中意为“最先见到太阳的地方” 挺拔的胡杨，环绕的山峦，哈萨克牧民的毡房，成群的牛羊，无不被它的美丽所震撼。 向前远眺，一望无际的草原，牛羊成群，骏马飞腾，哈萨克牧民那纯白的毡房点缀其间；路边各色的野花，风吹过沙沙作响，及腰的野草…… “天苍苍，野茫茫，风吹草低见牛羊”好像就是为那拉提所写。 <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0998.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_0998.JPG">      </a> <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1057.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1057.JPG">      </a> <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1060.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1060.JPG">      </a> <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1063.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1063.JPG">      </a> <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1197.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1197.JPG">      </a> <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1208.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1208.JPG">      </a> <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1217.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1217.JPG">      </a></p><hr>        <h2 id="2019-8-21">          <a href="#2019-8-21" class="heading-link"><i class="fas fa-link"></i></a><a href="#2019-8-21" class="headerlink" title="2019.8.21"></a>2019.8.21</h2>      <p>雪白的云朵装着天空那无边的喜悦，如同棉花糖一般轻飘飘地浮游飘动着，恍若触手可及，在明净的天边演绎着斑斓的人生，千姿百态。 <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1282.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1282.JPG">      </a> 八卦城，相对称的结构，如同八卦一般放射状圆形的布局，街道如神奇迷宫般，街街相通，路路相连，极具有神秘色彩。相传乌孙王建城时，以太极坛为中心，八匹马朝着八个方向规划，形成一个八卦形态。 <a href="https://image.krunk.cn/images/2020/08/30/20b5f65246814ef9a457cb0caefd5b3f.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://image.krunk.cn/images/2020/08/30/20b5f65246814ef9a457cb0caefd5b3f.jpg">      </a></p><p>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/07-89.JPG">      </p><p>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://image-cdn.krunk.cn/images/2019/10/16/IMG_1394-Panorama_zip2.jpg">      </p><p>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/33-29.JPG">      </p><div id="player"></div><script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script><script type="text/javascript">var player = new DogePlayer({    container: document.getElementById('player'),    userId: 1131,    vcode: 'ce5721b904a63fa5',    autoPlay: false});</script><hr>        <h2 id="2019-8-22">          <a href="#2019-8-22" class="heading-link"><i class="fas fa-link"></i></a><a href="#2019-8-22" class="headerlink" title="2019.8.22"></a>2019.8.22</h2>      <p>夏塔清丽开阔的雪山下，留有着小溪飞扬的身姿，潺潺的流水声在讲述着乌孙古道当年的辉煌。        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1451.JPG">      在峡谷中穿行，云卷云舒，光影似武，天山山脉木扎特峰在蓝天下呈现，雪山一面，不枉此行。雪山仿佛近在咫尺，又远在天边。 <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1465.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1465.JPG">      </a> </p><p>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://i.loli.net/2021/11/02/YPQjd6ftzu9gyHF.jpg">      </p><hr><div id="player"></div><script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script><script type="text/javascript">var player = new DogePlayer({    container: document.getElementById('player'),    userId: 1131,    vcode: '961672c8bb686a62',    autoPlay: false});</script><p>抬头，漆黑的幕布上，偶尔璀璨的星辰在倾诉北疆之夜的寂寥。它闪屏一般地规律眨眼，像极了梵高笔下一帧又一帧变化流淌的罗纳河上的星夜，偌大的夜晚只有漫天的星辰懂得它的黑。而今，这样一望无际的夜空里，我猜测大概是藏着上帝对漫漫人世羞赧的怜悯与深沉的爱，让它在深刻的色调里走向永恒，正印证了那句话：每个人的心里都有一团火，路过的人只看到烟。 <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1583.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1583.JPG">      </a></p><hr>        <h2 id="2019-8-23">          <a href="#2019-8-23" class="heading-link"><i class="fas fa-link"></i></a><a href="#2019-8-23" class="headerlink" title="2019.8.23"></a>2019.8.23</h2>      <p>八月末的赛里木湖送走了酷暑难耐的夏天，迎来了凉风习习的秋天。寒风起草地黄，应了这句话，这正是一个青黄不接的的季节，白天的日照依旧如往常强烈，而下车时身上携带的热量，经不住湖畔的大风之来势，三两下的吹拂便随之消弭殆尽，只剩下了丝丝凉意不住地往袖口里钻。八月末的赛里木湖周边的景致也略显单薄。 <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1721.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1721.JPG">      </a></p><p><a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1813.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1813.JPG" alt="大风扬积雪击面">      </a> 高原地区，气候出乎意料的多变，正如“东边日出西边雨”，穿越云雨区，阳光依旧。 <a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1825.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1825.JPG">      </a> 夕阳慢慢移到了山的后方，光影随时间一分一秒地更迭，暗蓝的天空和旖旎的晚霞流光溢彩，这是夕阳跌落于地平线前给予世人最后的馈赠。</p><p><a href="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1918.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://p.whrblog.online/2019/07/04/IMAGE-BED-1/IMG_1918.JPG">      </a></p><hr>]]></content>
    
    
    <summary type="html">飞机承载着我对遥远北疆的热忱，在滑行道上缓缓升腾，在气流的颠簸里，我知道我此时已在离北疆越来越近的路途上了，那是个令人心驰神往的名词------北疆。</summary>
    
    
    
    <category term="uncategorized" scheme="https://whrblog.online/categories/uncategorized/"/>
    
    
    <category term="Date" scheme="https://whrblog.online/tags/Date/"/>
    
    <category term="摄影" scheme="https://whrblog.online/tags/%E6%91%84%E5%BD%B1/"/>
    
    <category term="行者笔记" scheme="https://whrblog.online/tags/%E8%A1%8C%E8%80%85%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>树莓派+SSD1306屏幕</title>
    <link href="https://whrblog.online/2019/%E6%A0%91%E8%8E%93%E6%B4%BEssd1306%E5%B1%8F%E5%B9%95/"/>
    <id>https://whrblog.online/2019/%E6%A0%91%E8%8E%93%E6%B4%BEssd1306%E5%B1%8F%E5%B9%95/</id>
    <published>2019-08-07T00:37:02.000Z</published>
    <updated>2021-08-21T02:42:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://history.whrblog.online/2019/04/07/image-bed-1/IMG_20190804_165053.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/IMG_20190804_165053.jpg">      </a></p><span id="more"></span>        <h1 id="启用树莓派的I2C功能">          <a href="#启用树莓派的I2C功能" class="heading-link"><i class="fas fa-link"></i></a><a href="#启用树莓派的I2C功能" class="headerlink" title="启用树莓派的I2C功能"></a>启用树莓派的I2C功能</h1>      <p>sudo apt-get install -y python-smbus<br>sudo apt-get install -y i2c-tools<br>sudo raspi-config</p><p>Interfacing Options–&gt;I2C–&gt;enable</p><hr>        <h1 id="安装库文件">          <a href="#安装库文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#安装库文件" class="headerlink" title="安装库文件"></a>安装库文件</h1>      <p>sudo python -m pip install –upgrade pip setuptools wheel</p><p>PIL 库</p><p>sudo apt-get install python-pil python3-pil</p><p>Adafruit-SSD1306 库</p><p>git clone <span class="exturl"><a class="exturl__link" href="https://github.com/adafruit/Adafruit/_Python/_SSD1306.git">https://github.com/adafruit/Adafruit\_Python\_SSD1306.git</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><hr>        <h1 id="连接屏幕">          <a href="#连接屏幕" class="heading-link"><i class="fas fa-link"></i></a><a href="#连接屏幕" class="headerlink" title="连接屏幕"></a>连接屏幕</h1>      <p><a href="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1565147846250&amp;di=7ee10e48ad53b034f6f3effa0257bba9&amp;imgtype=0&amp;src=http://upload.semidata.info/new.eefocus.com/article/image/2019/01/11/5c380a5770ccf.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1565147846250&amp;di=7ee10e48ad53b034f6f3effa0257bba9&amp;imgtype=0&amp;src=http://upload.semidata.info/new.eefocus.com/article/image/2019/01/11/5c380a5770ccf.jpg" style="width: b9999_10000px;">      </a> 屏幕 GND 接树莓派 GND 屏幕 VCC 接树莓派 3V3 屏幕 SDA 接树莓派 SDA 屏幕 SCL 接树莓派 SCL</p><hr>        <h1 id="检测是否识别到-I2C-设备">          <a href="#检测是否识别到-I2C-设备" class="heading-link"><i class="fas fa-link"></i></a><a href="#检测是否识别到-I2C-设备" class="headerlink" title="检测是否识别到 I2C 设备"></a>检测是否识别到 I2C 设备</h1>      <p>sudo i2cdetect -y 1</p>        <h1 id="运行">          <a href="#运行" class="heading-link"><i class="fas fa-link"></i></a><a href="#运行" class="headerlink" title="运行"></a>运行</h1>      <p>在之前克隆的代码中包含了可以直接运行的示例源码</p><p>sudo nano ~/Adafruit_Python_SSD1306/examples/stats.py</p><p>修改屏幕类型</p><p># 128x32 display with hardware I2C:</p>        <h1 id="disp-Adafruit-SSD1306-SSD1306-128-32-rst-RST">          <a href="#disp-Adafruit-SSD1306-SSD1306-128-32-rst-RST" class="heading-link"><i class="fas fa-link"></i></a><a href="#disp-Adafruit-SSD1306-SSD1306-128-32-rst-RST" class="headerlink" title="disp = Adafruit_SSD1306.SSD1306_128_32(rst=RST)"></a>disp = Adafruit_SSD1306.SSD1306_128_32(rst=RST)</h1>              <h1 id="128x64-display-with-hardware-I2C">          <a href="#128x64-display-with-hardware-I2C" class="heading-link"><i class="fas fa-link"></i></a><a href="#128x64-display-with-hardware-I2C" class="headerlink" title="128x64 display with hardware I2C:"></a>128x64 display with hardware I2C:</h1>      <p>disp = Adafruit_SSD1306.SSD1306_128_64(rst=RST)</p>        <h1 id="Note-you-can-change-the-I2C-address-by-passing-an-i2c-address-parameter-like">          <a href="#Note-you-can-change-the-I2C-address-by-passing-an-i2c-address-parameter-like" class="heading-link"><i class="fas fa-link"></i></a><a href="#Note-you-can-change-the-I2C-address-by-passing-an-i2c-address-parameter-like" class="headerlink" title="Note you can change the I2C address by passing an i2c_address parameter like:"></a>Note you can change the I2C address by passing an i2c_address parameter like:</h1>              <h1 id="disp-Adafruit-SSD1306-SSD1306-128-64-rst-RST-i2c-address-0x3C">          <a href="#disp-Adafruit-SSD1306-SSD1306-128-64-rst-RST-i2c-address-0x3C" class="heading-link"><i class="fas fa-link"></i></a><a href="#disp-Adafruit-SSD1306-SSD1306-128-64-rst-RST-i2c-address-0x3C" class="headerlink" title="disp = Adafruit_SSD1306.SSD1306_128_64(rst=RST, i2c_address=0x3C)"></a>disp = Adafruit_SSD1306.SSD1306_128_64(rst=RST, i2c_address=0x3C)</h1>      <p>运行</p><p>sudo python  ~/Adafruit_Python_SSD1306/examples/stats.py</p><p><a href="https://history.whrblog.online/2019/04/07/image-bed-1/IMG_20190804_161202.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/IMG_20190804_161202.jpg">      </a></p><p>sudo python ~/Adafruit_Python_SSD1306/examples/image.py</p><p><a href="https://history.whrblog.online/2019/04/07/image-bed-1/IMG_20190804_161458.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/IMG_20190804_161458.jpg">      </a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://history.whrblog.online/2019/04/07/image-bed-1/IMG_20190804_165053.jpg&quot;&gt;
        &lt;img class=&quot;lazyload lazyload-gif&quot; src=&quot;/images/loading.svg&quot; data-src=&quot;https://history.whrblog.online/2019/04/07/image-bed-1/IMG_20190804_165053.jpg&quot;&gt;
      &lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="uncategorized" scheme="https://whrblog.online/categories/uncategorized/"/>
    
    
    <category term="IT" scheme="https://whrblog.online/tags/IT/"/>
    
    <category term="Linux" scheme="https://whrblog.online/tags/Linux/"/>
    
    <category term="折腾" scheme="https://whrblog.online/tags/%E6%8A%98%E8%85%BE/"/>
    
    <category term="Raspi/Orapi" scheme="https://whrblog.online/tags/Raspi-Orapi/"/>
    
  </entry>
  
  <entry>
    <title>树莓派lot=Node.js+Bylnk+DHT11/DHT22</title>
    <link href="https://whrblog.online/2019/%E6%A0%91%E8%8E%93%E6%B4%BEnode-jsbylnk-appdht11-dht22-am2302/"/>
    <id>https://whrblog.online/2019/%E6%A0%91%E8%8E%93%E6%B4%BEnode-jsbylnk-appdht11-dht22-am2302/</id>
    <published>2019-07-29T23:33:30.000Z</published>
    <updated>2021-08-21T02:42:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a><a href="https://history.whrblog.online/2019/04/07/image-bed-1/IMG_20190731_160014.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/IMG_20190731_160014.jpg">      </a></h1><span id="more"></span>        <h1 id="安装npm及Bylnk库">          <a href="#安装npm及Bylnk库" class="heading-link"><i class="fas fa-link"></i></a><a href="#安装npm及Bylnk库" class="headerlink" title="安装npm及Bylnk库"></a>安装npm及Bylnk库</h1>      <p>&nbsp;</p><p>sudo apt install npm -y<br>sudo apt-get install build-essential<br>sudo npm install -g npm<br>sudo npm install -g onoff<br>sudo npm install -g blynk-library</p>        <h1 id="安装传感器库">          <a href="#安装传感器库" class="heading-link"><i class="fas fa-link"></i></a><a href="#安装传感器库" class="headerlink" title="安装传感器库"></a>安装传感器库</h1>      <ul><li>  <span class="exturl"><a class="exturl__link" href="http://www.airspayce.com/mikem/bcm2835/">bcm2835库</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li>  <span class="exturl"><a class="exturl__link" href="https://github.com/momenso/node-dht-sensor">node-dht-sensor</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>&nbsp;npm包</li></ul><p>wget <span class="exturl"><a class="exturl__link" href="http://www.airspayce.com/mikem/bcm2835/bcm2835-1.46.tar.gz">http://www.airspayce.com/mikem/bcm2835/bcm2835-1.46.tar.gz</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>tar zxvf bcm2835-1.46.tar.gz<br>cd bcm2835-1.46<br>./configure<br>make<br>sudo make check<br>sudo make install<br>sudo npm install -g node-dht-sensor</p>        <h1 id="连接传感器">          <a href="#连接传感器" class="heading-link"><i class="fas fa-link"></i></a><a href="#连接传感器" class="headerlink" title="连接传感器"></a>连接传感器</h1>      <ul><li>  GND至GND</li><li>  DAT信号到GPIO7</li><li>  VCC至3.3v</li></ul>        <h1 id="创建可执行文件">          <a href="#创建可执行文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#创建可执行文件" class="headerlink" title="创建可执行文件"></a>创建可执行文件</h1>      <p>cd ~<br>git clone <span class="exturl"><a class="exturl__link" href="https://github.com/wanghurui/Blynk-dht11-22.git">https://github.com/wanghurui/Blynk-dht11-22.git</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>或者</p><p>var blynkLib = require(‘blynk-library’);<br>var sensorLib = require(‘node-dht-sensor’);</p><p>var AUTH = ‘YOUR_AUTH_TOKEN’;</p><p>// Setup Blynk<br>var blynk = new blynkLib.Blynk(AUTH);</p><p>// Setup sensor, exit if failed<br>var sensorType = 11; // 11 for DHT11, 22 for DHT22 and AM2302<br>var sensorPin  = 4;  // The GPIO pin number for sensor signal<br>if (!sensorLib.initialize(sensorType, sensorPin)) {<br>    console.warn(‘Failed to initialize sensor’);<br>    process.exit(1);<br>}</p><p>// Automatically update sensor value every 2 seconds<br>setInterval(function() {<br>    var readout = sensorLib.read();<br>    blynk.virtualWrite(3, readout.temperature.toFixed(1));<br>    blynk.virtualWrite(4, readout.humidity.toFixed(1));</p><pre><code>console.log('Temperature:', readout.temperature.toFixed(1) + 'C');console.log('Humidity:   ', readout.humidity.toFixed(1)    + '%');</code></pre><p>}, 2000);</p><p>将<strong>YOUR_AUTH_TOKEN</strong>替换为App中的令牌。</p><p>sudo NODE_PATH =/usr/local/lib/node_modules node ./blynk-sensor-test.js</p><p>输出应如下所示</p><p>OnOff mode<br>Connecting to TCP: cloud.blynk.cc 8442<br>Connected<br>Temperature: 18.0C<br>Humidity:    26.0%<br>Temperature: 18.0C<br>Humidity:    26.0%</p><p>可以使用pm2将此程序放在后台守护进程并且开机自启动</p><p>npm install -g pm2<br>sudo NODE_PATH=/usr/local/lib/node_modules pm2 start ./blynk-sensor-test.js<br>sudo pm2 save<br>sudo pm2 startup</p><p>&nbsp; <a href="https://history.whrblog.online/2019/04/07/image-bed-1/20190730071339.png">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/20190730071339.png">      </a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://history.whrblog.online/2019/04/07/image-bed-1/IMG_20190731_160014.jpg&quot;&gt;
        &lt;img class=&quot;lazyload lazyload-gif&quot; src=&quot;/images/loading.svg&quot; data-src=&quot;https://history.whrblog.online/2019/04/07/image-bed-1/IMG_20190731_160014.jpg&quot;&gt;
      &lt;/a&gt;&lt;/h1&gt;</summary>
    
    
    
    <category term="uncategorized" scheme="https://whrblog.online/categories/uncategorized/"/>
    
    
    <category term="IT" scheme="https://whrblog.online/tags/IT/"/>
    
    <category term="Linux" scheme="https://whrblog.online/tags/Linux/"/>
    
    <category term="折腾" scheme="https://whrblog.online/tags/%E6%8A%98%E8%85%BE/"/>
    
    <category term="Raspi/Orapi" scheme="https://whrblog.online/tags/Raspi-Orapi/"/>
    
  </entry>
  
  <entry>
    <title>2019.7.19</title>
    <link href="https://whrblog.online/2019/2019-7-19/"/>
    <id>https://whrblog.online/2019/2019-7-19/</id>
    <published>2019-07-20T05:12:55.000Z</published>
    <updated>2022-02-20T01:19:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="何谓友情？何谓缘分？">          <a href="#何谓友情？何谓缘分？" class="heading-link"><i class="fas fa-link"></i></a><a href="#何谓友情？何谓缘分？" class="headerlink" title="何谓友情？何谓缘分？"></a>何谓友情？何谓缘分？</h2>      <hr><span id="more"></span><p>是离别时远隔重洋却心照不宣的默契，是多年来老旧相片里昔日光景的纪念，是与你聊的同一话题时一起旁若无人的开怀大笑，是茫茫人海行色匆匆里曾经彼此熟悉的身影…… 青春的颜色，是真情的颜色；相聚总是太少，真情总被无情错过。 希望多年以后，你仍然能在别人面前自豪的说出：“我是你的朋友”。</p><hr><p><a href="https://history.whrblog.online/2019/04/07/image-bed-1/20190720150444.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/20190720150444.jpg">      </a> <a href="https://history.whrblog.online/2019/04/07/image-bed-1/20190720150244.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/20190720150244.jpg">      </a> <a href="https://history.whrblog.online/2019/04/07/image-bed-1/20190720150439.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/20190720150439.jpg">      </a> <a href="https://history.whrblog.online/2019/04/07/image-bed-1/20190720150314.jpg">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/20190720150314.jpg">      </a></p><hr><p>2019.7.20</p><p>Whr</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;何谓友情？何谓缘分？&quot;&gt;
          &lt;a href=&quot;#何谓友情？何谓缘分？&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#何谓友情？何谓缘分？&quot; class=&quot;headerlink&quot; title=&quot;何谓友情？何谓缘分？&quot;&gt;&lt;/a&gt;何谓友情？何谓缘分？&lt;/h2&gt;
      &lt;hr&gt;</summary>
    
    
    
    <category term="uncategorized" scheme="https://whrblog.online/categories/uncategorized/"/>
    
    
    <category term="Date" scheme="https://whrblog.online/tags/Date/"/>
    
    <category term="Hexo" scheme="https://whrblog.online/tags/Hexo/"/>
    
    <category term="Friends" scheme="https://whrblog.online/tags/Friends/"/>
    
    <category term="R.C" scheme="https://whrblog.online/tags/R-C/"/>
    
  </entry>
  
  <entry>
    <title>2019.6.29 大嵛山岛笔记</title>
    <link href="https://whrblog.online/2019/2019-6-29-%E5%A4%A7%E5%B5%9B%E5%B1%B1%E5%B2%9B%E7%AC%94%E8%AE%B0/"/>
    <id>https://whrblog.online/2019/2019-6-29-%E5%A4%A7%E5%B5%9B%E5%B1%B1%E5%B2%9B%E7%AC%94%E8%AE%B0/</id>
    <published>2019-06-30T13:45:54.000Z</published>
    <updated>2022-01-24T06:03:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>大嵛山岛—-是闽东最大的列岛，是一个坐落在福鼎东南海域，距离三沙古镇港5海里，他由大嵛山、小嵛山、鸳鸯岛、银屿等十一个大小岛屿组成，大嵛山岛曾被中国国家地理”杂志社评为“中国最美的地方”中“最美的海岛”第八名。其山、湖、草、海在此浓缩。天湖四周山坡平缓，是有“南国天山”之誉的万亩草场。</p><p>嵛山岛地理位置特殊，扼闽浙海路之咽喉，是南来北往船只的必经之道，战略意义重大。明朝时期为抵御倭寇骚扰，1389年明政府在嵛山岛设置军事要塞，归北路福宁卫烽火寨管辖，1592年改守备为参将、节制水陆，改中军为嵛山游。清代中叶，嵛山列岛是蔡牵海上起义活动的重要根据地。辛亥革命先驱朱腾芬先生也在此组织义军抗清。</p><span id="more"></span><p>山势回环，路随山转，岛上的旅游巴士在这蜿蜒曲折的山路上飞驰着。随着海拔的增高，视线内的景物也随之变化，从灌木丛变成了高山草甸，从涓涓的小溪变成了气势滂沱的瀑布。旅游巴士一路颠簸，我们眼中摇摇晃晃的崎岖山路里承载的尽是一行人无尽的好奇与向往，我们驻足停留来到了山腰。<a href="https://history.whrblog.online/2019/04/07/image-bed-1/IMG_0199.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/IMG_0199.JPG">      </a> 刚涉足这片陌生的土地，无比沉闷的湿气里一股沁人心脾草籽的清香扑面而来 我们沿着盘山步道一点一点向大嵛山山顶登去。我们行走在山脊上，缭绕的雾气被山顶的强风吹散，呼吸着雾气特有的味道，藏在雾霭中的两个天池逐渐拭去混沌，越发清冽。 <a href="https://history.whrblog.online/2019/04/07/image-bed-1/IMG_0265.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/IMG_0265.JPG">      </a> 天池周围群峰环拱，其状似盂，这可能就是嵛山岛名字的来源吧。在这里恍若置身于“天苍苍，野茫茫，风吹草低见牛羊”的大西北草原。如果不是我们来这里旅行，难以想象在碧波万顷的东海之上竟有如此风云奇诡的意境。 <a href="https://history.whrblog.online/2019/04/07/image-bed-1/IMG_0227.JPG">        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/IMG_0227.JPG">      </a> 我极目远眺，它拼命掩面，半伏半隐，挣扎着躲进袅袅的雾霭中去。潮湿的季风将山间的云雾升腾出如海市蜃楼的形状；蓝天上，是上帝的一半明媚一半忧伤。山峦间，是悠悠的水，袅袅的烟，静静的谱写着属于大嵛山的歌…… &nbsp;</p><p>2019.6.29</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;大嵛山岛—-是闽东最大的列岛，是一个坐落在福鼎东南海域，距离三沙古镇港5海里，他由大嵛山、小嵛山、鸳鸯岛、银屿等十一个大小岛屿组成，大嵛山岛曾被中国国家地理”杂志社评为“中国最美的地方”中“最美的海岛”第八名。其山、湖、草、海在此浓缩。天湖四周山坡平缓，是有“南国天山”之誉的万亩草场。&lt;/p&gt;
&lt;p&gt;嵛山岛地理位置特殊，扼闽浙海路之咽喉，是南来北往船只的必经之道，战略意义重大。明朝时期为抵御倭寇骚扰，1389年明政府在嵛山岛设置军事要塞，归北路福宁卫烽火寨管辖，1592年改守备为参将、节制水陆，改中军为嵛山游。清代中叶，嵛山列岛是蔡牵海上起义活动的重要根据地。辛亥革命先驱朱腾芬先生也在此组织义军抗清。&lt;/p&gt;</summary>
    
    
    
    <category term="uncategorized" scheme="https://whrblog.online/categories/uncategorized/"/>
    
    
    <category term="Date" scheme="https://whrblog.online/tags/Date/"/>
    
    <category term="摄影" scheme="https://whrblog.online/tags/%E6%91%84%E5%BD%B1/"/>
    
    <category term="行者笔记" scheme="https://whrblog.online/tags/%E8%A1%8C%E8%80%85%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Hexo" scheme="https://whrblog.online/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>用WP-CLI给WordPress更换域名</title>
    <link href="https://whrblog.online/2019/%E7%94%A8wp-cli%E7%BB%99wordpress%E6%9B%B4%E6%8D%A2%E5%9F%9F%E5%90%8D/"/>
    <id>https://whrblog.online/2019/%E7%94%A8wp-cli%E7%BB%99wordpress%E6%9B%B4%E6%8D%A2%E5%9F%9F%E5%90%8D/</id>
    <published>2019-03-02T09:02:04.000Z</published>
    <updated>2021-08-21T02:42:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>wp-cli 是一个命令行工具，可以让我们通过命令行安装、更新 WordPress，对 WordPress 执行一些批量操作，响应速度快，使用方便</p><span id="more"></span><p>        <img class="lazyload lazyload-gif" src="/images/loading.svg" data-src="https://history.whrblog.online/2019/04/07/image-bed-1/kqSUFU.png">      </p>        <h2 id="安装-wp-cli-工具">          <a href="#安装-wp-cli-工具" class="heading-link"><i class="fas fa-link"></i></a><a href="#安装-wp-cli-工具" class="headerlink" title="安装 wp-cli 工具"></a>安装 wp-cli 工具</h2>      <p>curl -O <span class="exturl"><a class="exturl__link" href="https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar">https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>chmod +x wp-cli.phar<br>sudo mv wp-cli.phar /usr/local/bin/wp</p>        <h2 id="搜索替换-WordPress-数据库中的域名">          <a href="#搜索替换-WordPress-数据库中的域名" class="heading-link"><i class="fas fa-link"></i></a><a href="#搜索替换-WordPress-数据库中的域名" class="headerlink" title="搜索替换 WordPress 数据库中的域名"></a>搜索替换 WordPress 数据库中的域名</h2>      <p>wp-cli 工具为我们提供了一个搜索替换数据库中字符的命令，<strong>直接在 WordPress 的根目录执行</strong>以下命令即可完成更换 WordPress 域名的操作，该命令支持一些选项方便我们自定义操作，具体查看 wp search-replace 命令的官方说明。</p><p>wp search-replace ‘old.com’ ‘new.com’</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;wp-cli 是一个命令行工具，可以让我们通过命令行安装、更新 WordPress，对 WordPress 执行一些批量操作，响应速度快，使用方便&lt;/p&gt;</summary>
    
    
    
    <category term="uncategorized" scheme="https://whrblog.online/categories/uncategorized/"/>
    
    
    <category term="IT" scheme="https://whrblog.online/tags/IT/"/>
    
    <category term="折腾" scheme="https://whrblog.online/tags/%E6%8A%98%E8%85%BE/"/>
    
    <category term="Wordpress" scheme="https://whrblog.online/tags/Wordpress/"/>
    
  </entry>
  
</feed>
